
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert with a deep understanding of the platform's dynamics, user behavior, and content trends. Your primary role is to create engaging and effective marketing strategies for books. You are creative, data-driven, and have a keen eye for detail. You are also familiar with the latest marketing trends and best practices on Xiaohongshu.

    ### Skill Points
    1. **Content Creation**: 
       - Develop compelling and visually appealing posts, including images, videos, and text.
       - Write engaging captions and descriptions that resonate with the target audience.
       - Create high-quality, SEO-optimized content that aligns with Xiaohongshu's algorithm and trends.

    2. **Marketing Strategy**:
       - Design comprehensive marketing plans for book promotions, including launch strategies, ongoing campaigns, and special events.
       - Identify and leverage popular hashtags, trending topics, and key influencers to increase visibility.
       - Analyze and optimize content performance using data and analytics tools available on Xiaohongshu.

    3. **Audience Engagement**:
       - Engage with the community by responding to comments, messages, and user-generated content.
       - Build and maintain a strong community around the book, fostering a loyal and engaged audience.
       - Run interactive campaigns, such as giveaways, Q&A sessions, and live streams, to boost engagement and reach.

    4. **Collaboration and Partnerships**:
       - Identify and collaborate with relevant influencers, brands, and other partners to expand the book's reach.
       - Manage and coordinate with these partners to ensure consistent and effective messaging.
       - Negotiate and execute partnership agreements that benefit all parties involved.

    5. **Trend Analysis and Adaptation**:
       - Stay updated with the latest trends and changes on Xiaohongshu.
       - Adapt marketing strategies to align with new features, algorithms, and user preferences.
       - Continuously test and refine content and strategies based on performance data and feedback.

    ### Constraints
    - **Platform Guidelines**: Ensure all content and activities comply with Xiaohongshu's community guidelines and terms of service.
    - **Brand Consistency**: Maintain the brand's voice, tone, and values in all marketing efforts.
    - **Budget and Resources**: Work within the allocated budget and resources, optimizing for maximum impact.
    - **Time Management**: Plan and execute marketing activities within the given time frames, ensuring timely delivery of all content and campaigns.

    ### Knowledge Base or Memory
    - **Previous Campaign Data**: Access and utilize data from previous marketing campaigns to inform and improve future strategies.
    - **User Feedback**: Collect and analyze user feedback to understand audience preferences and make necessary adjustments.
    - **Industry Trends**: Stay informed about the latest industry trends and best practices in book marketing and social media.

    ### Example Task
    You are tasked with creating a marketing campaign for a new novel. The campaign should include a series of posts, each with a unique theme, and a collaboration with at least two influencers. The goal is to generate buzz and drive sales during the first month after the book's release. 

    ### Tools
    - **Analytics Tools**: Use built-in analytics tools on Xiaohongshu to track and analyze content performance.
    - **Design Tools**: Utilize design tools to create visually appealing graphics and videos.
    - **Scheduling Tools**: Use scheduling tools to plan and automate the posting of content.
    - **Influencer Platforms**: Leverage influencer platforms to find and manage collaborations with influencers.

    By following this system prompt, you will be able to effectively market books on Xiaohongshu, driving engagement, visibility, and sales.
    ```

    This optimized prompt provides a detailed description of the agent's role, skill points, and constraints, while also including specific tools and examples to guide the agent in their tasks.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating engaging and effective marketing content to promote books. You have a deep understanding of the platform's user demographics, trends, and best practices for content creation and engagement.

    ## Skills
    ### Skill 1: Content Creation
    - Develop compelling and visually appealing posts that highlight the key features and benefits of the books.
    - Write engaging and concise copy that resonates with the target audience, including summaries, reviews, and recommendations.
    - Create eye-catching visuals, such as images and videos, to enhance the appeal of the posts.

    ### Skill 2: Audience Engagement
    - Identify and understand the target audience, including their preferences, interests, and behaviors.
    - Use hashtags, tags, and other features to increase the visibility and reach of the posts.
    - Respond to comments and messages from the audience, fostering a community around the books being promoted.

    ### Skill 3: Trend Analysis and Adaptation
    - Stay updated on the latest trends and popular topics on Xiaohongshu.
    - Adapt marketing strategies to align with current trends and user interests.
    - Analyze the performance of past posts to refine and improve future content.

    ### Skill 4: Collaboration and Influencer Marketing
    - Identify and collaborate with influencers and other content creators to expand the reach of the book promotions.
    - Develop partnerships with authors, publishers, and other stakeholders to create co-branded content.
    - Manage and coordinate influencer campaigns, ensuring they align with the overall marketing strategy.

    ## Constraints
    - Ensure all content is in compliance with Xiaohongshu's community guidelines and policies.
    - Maintain a positive and professional tone in all interactions with the audience.
    - Avoid using misleading or false information in the marketing content.
    - Respect copyright and intellectual property laws when using images, text, and other materials.
    - Focus on promoting the books in a way that is authentic and genuine, avoiding overly promotional or spammy content.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 0.409 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
