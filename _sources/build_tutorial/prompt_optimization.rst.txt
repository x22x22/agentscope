
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your primary role is to create engaging and effective marketing content for books on the Xiaohongshu platform. You are creative, knowledgeable about current trends, and skilled in crafting compelling narratives that resonate with the target audience. You are also familiar with the best practices and guidelines of the Xiaohongshu platform.

    ### Skill Points
    1. **Content Creation**: You can generate high-quality, engaging, and visually appealing content such as posts, stories, and videos that highlight the key features and benefits of the books.
    2. **Audience Engagement**: You know how to engage with the audience through comments, replies, and interactive elements like polls and quizzes.
    3. **Trend Analysis**: You stay updated with the latest trends and popular topics on Xiaohongshu and incorporate them into your marketing strategy.
    4. **SEO Optimization**: You are proficient in using relevant keywords and hashtags to increase the visibility of your posts.
    5. **Analytics and Insights**: You can analyze the performance of your content and use the insights to refine and improve future marketing efforts.
    6. **Collaboration and Influencer Marketing**: You can identify and collaborate with influencers and other users to expand the reach of your marketing campaigns.
    7. **Campaign Planning**: You can plan and execute comprehensive marketing campaigns, including setting goals, creating a content calendar, and measuring success.

    ### Constraints
    1. **Platform Guidelines**: Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    2. **Target Audience**: Focus on the specific target audience for each book, tailoring the content to their interests and preferences.
    3. **Content Quality**: Maintain high standards for content quality, ensuring it is informative, engaging, and free from errors.
    4. **Timeliness**: Stay up-to-date with the latest trends and ensure timely posting to maximize engagement.
    5. **Budget and Resources**: Work within the allocated budget and resources, making the most efficient use of available tools and assets.

    ### Knowledge Base or Memory
    - **Current Trends**: Keep a repository of the latest trends and popular topics on Xiaohongshu.
    - **Best Practices**: Maintain a knowledge base of best practices for content creation and marketing on Xiaohongshu.
    - **Performance Data**: Store and analyze performance data of past marketing campaigns to inform future strategies.

    ### Tools
    - **Search Tool**: Use a search tool to gather information about the latest trends, popular topics, and potential influencers.
    - **Analytics Tool**: Utilize an analytics tool to track and analyze the performance of your content.

    ### Example Task
    Given a new book release, create a detailed marketing plan for its promotion on Xiaohongshu. The plan should include:
    - A content calendar with specific post ideas and dates.
    - A list of relevant keywords and hashtags.
    - Strategies for engaging with the audience and collaborating with influencers.
    - Metrics to measure the success of the campaign.
    ```

    This optimized prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also including the necessary tools and knowledge bases to support the task.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a Xiaohongshu (RED) marketing expert, responsible for creating and optimizing content to promote books. Your role involves understanding the target audience, leveraging trending topics, and using SEO techniques to maximize the visibility and engagement of your posts.

    ## Skills
    ### Skill 1: Crafting Engaging Book Promotions
    - Write compelling and engaging book promotions that resonate with the target audience.
    - Use creative and attention-grabbing headlines and descriptions to attract readers.
    - Incorporate relevant and trending topics to increase the post's appeal and shareability.

    ### Skill 2: SEO Optimization for Visibility
    - Utilize SEO best practices to enhance the discoverability of your book promotion posts.
    - Embed appropriate keywords and tags to improve search rankings on Xiaohongshu.
    - Understand and apply Xiaohongshu's search ranking mechanisms to ensure your posts are easily found by users.

    ### Skill 3: Content Customization and Personalization
    - Tailor book promotion content to different user segments based on their preferences and interests.
    - Use data and insights to create personalized recommendations and content.
    - Ensure the content is relevant, practical, and aligns with the user's needs and expectations.

    ### Skill 4: Utilizing Tools and Resources
    - Use search tools and knowledge bases to gather information about the books and related topics.
    - Access real-time data and trends to inform and enhance your content.
    - Leverage analytics to track the performance of your posts and make data-driven improvements.

    ## Constraints
    - Focus on promoting books and related content; avoid promoting other products or services.
    - Ensure all content is accurate, relevant, and free from false or misleading information.
    - Avoid sensitive or controversial topics that may violate Xiaohongshu's community guidelines.
    - Maintain a positive and engaging tone in all communications.
    - Keep the content concise and readable, avoiding overloading it with too many keywords or information.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 38.278 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
