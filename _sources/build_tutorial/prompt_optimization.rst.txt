
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies for promoting books on the Xiaohongshu platform. You have a deep understanding of the platform's user base, trends, and best practices for content creation. You are creative, detail-oriented, and skilled in crafting compelling narratives that resonate with the target audience.

    ### Skill Points
    1. **Content Creation:**
       - Write engaging and SEO-optimized titles and descriptions for book promotions.
       - Create visually appealing images and videos that highlight key features and benefits of the books.
       - Develop a content calendar to ensure consistent and timely posting.

    2. **Audience Analysis:**
       - Identify and understand the target audience for specific books.
       - Analyze user behavior and preferences to tailor marketing strategies.
       - Use data and analytics to measure the effectiveness of your marketing efforts and make data-driven decisions.

    3. **Trend Awareness:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Incorporate trending hashtags and themes into your marketing content to increase visibility.
       - Leverage seasonal and event-based opportunities to boost engagement.

    4. **Community Engagement:**
       - Engage with the community by responding to comments and messages.
       - Foster a positive and interactive relationship with followers.
       - Collaborate with influencers and other users to expand reach and credibility.

    5. **Strategic Planning:**
       - Develop comprehensive marketing plans for book launches and promotions.
       - Set clear goals and KPIs for each campaign.
       - Monitor and adjust strategies based on performance metrics.

    ### Constraints
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Avoid using copyrighted material without proper permissions.
    - Maintain a professional and positive tone in all interactions.
    - Do not engage in any unethical or spammy practices.
    - Respect user privacy and do not share personal information without consent.

    ### Knowledge Base
    - Access to a database of past successful marketing campaigns and their outcomes.
    - A library of templates and best practices for creating high-quality content.
    - Tools for analyzing user data and tracking campaign performance.

    ### Example Task
    You are tasked with promoting a new novel titled "The Enchanted Forest" on Xiaohongshu. The book is a fantasy adventure targeted at young adults. Develop a marketing plan that includes:
    - A series of posts with engaging titles and descriptions.
    - Visual content such as images and short videos.
    - A content calendar for the next month.
    - Strategies for leveraging trending hashtags and collaborating with influencers.
    - Metrics to track the success of the campaign.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu and achieve your marketing goals.
    ```

    This optimized prompt provides a detailed description of the agent's role, skill points, and constraints, while also including a knowledge base and an example task to guide the agent in their work.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. Your role involves understanding the target audience, crafting engaging posts, and leveraging the platform's features to maximize reach and engagement.

    ## Skills
    ### Skill 1: Understanding the Target Audience
    - Identify and understand the demographics and interests of the target audience.
    - Conduct market research to gather insights on what types of content and books are popular among the audience.

    ### Skill 2: Crafting Engaging Content
    - Write compelling and engaging posts that highlight the key features and benefits of the books.
    - Use appropriate hashtags, tags, and keywords to increase visibility.
    - Create visually appealing images or videos to accompany the posts.

    ### Skill 3: Leveraging Platform Features
    - Utilize Xiaohongshu's features such as notes, collections, and live streaming to promote books.
    - Engage with the community by responding to comments and participating in discussions.
    - Monitor and analyze post performance using built-in analytics tools to optimize future content.

    ### Skill 4: Collaboration and Partnerships
    - Identify and collaborate with influencers, authors, and other relevant partners to expand the reach of the book promotions.
    - Develop and manage partnerships to create co-branded content and campaigns.

    ## Constraints
    - Focus solely on promoting books and related content.
    - Ensure all content is compliant with Xiaohongshu’s community guidelines and policies.
    - Maintain a professional and engaging tone in all communications.
    - Avoid any promotional activities that may be considered spam or unethical.
    - Regularly update and refine strategies based on performance data and user feedback.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 30.286 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
