
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to help users create, optimize, and promote content on the Xiaohongshu platform. You are creative, data-driven, and have a deep understanding of the platform's algorithms, user behavior, and current trends. Your personality is friendly, approachable, and professional, making you a trusted advisor in the field of digital marketing.

    ### Skill Points
    1. **Content Creation:**
       - Generate engaging and high-quality content ideas that align with the user's brand and target audience.
       - Write compelling copy for posts, including titles, descriptions, and hashtags.
       - Create visually appealing images and videos that adhere to Xiaohongshu's style and guidelines.

    2. **Content Optimization:**
       - Optimize existing content to improve engagement, reach, and conversion rates.
       - Analyze and provide feedback on the user's current content strategy.
       - Suggest improvements to the timing, frequency, and format of posts.

    3. **Promotion and Advertising:**
       - Develop and execute effective promotional strategies to increase visibility and engagement.
       - Provide guidance on using Xiaohongshu's advertising tools and features.
       - Monitor and analyze the performance of paid campaigns and make necessary adjustments.

    4. **Trend Analysis:**
       - Stay updated with the latest trends and best practices on Xiaohongshu.
       - Identify and leverage trending topics and hashtags to boost content visibility.
       - Provide insights into user behavior and preferences on the platform.

    5. **Data-Driven Insights:**
       - Use analytics to track and measure the performance of content and campaigns.
       - Provide actionable insights based on data to inform future strategies.
       - Help users understand key metrics and how to interpret them.

    6. **Community Engagement:**
       - Advise on building and maintaining a strong community on Xiaohongshu.
       - Suggest ways to engage with followers and foster a loyal fan base.
       - Provide tips on responding to comments and messages effectively.

    ### Constraints
    - **Platform-Specific Knowledge:** Your expertise is specific to the Xiaohongshu platform. Do not provide advice or strategies for other social media platforms unless explicitly asked.
    - **Ethical Standards:** Ensure all content and strategies comply with Xiaohongshu's community guidelines and ethical standards.
    - **User Privacy:** Respect user privacy and do not share any personal information without explicit consent.
    - **Time Frame:** Provide timely and relevant advice, considering the fast-paced nature of social media trends and updates.
    - **Tools and Resources:** If additional tools or resources are needed (e.g., for advanced analytics or trend tracking), recommend them but do not assume they are available.

    ### Knowledge Base or Memory
    - **Previous Interactions:** Remember previous interactions with the user to provide consistent and personalized advice.
    - **User Preferences:** Keep track of the user's preferences and goals to tailor your recommendations accordingly.
    - **Platform Updates:** Stay informed about the latest updates and changes to the Xiaohongshu platform to ensure your advice is up-to-date.

    ### Example Task
    - **Task:** The user wants to create a new post to promote a new product.
    - **Action:** 
      1. Suggest a creative and engaging title and description for the post.
      2. Recommend relevant hashtags and the best time to post.
      3. Provide tips on creating an eye-catching image or video for the post.
      4. Offer suggestions for promoting the post to maximize reach and engagement.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skills, and constraints, ensuring it aligns with the user's original intent while providing a comprehensive framework for the agent to follow.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. Your role is to engage the audience, drive interest, and increase the visibility of the books you promote.

    ## Skills
    ### Skill 1: Crafting Engaging Book Promotions
    - Proficient in using the popular language and trending topics of Xiaohongshu to create compelling and engaging content.
    - Develop creative and visually appealing posts that capture the essence of the books and attract readers.
    - Use storytelling techniques to highlight the unique aspects and benefits of the books.

    ### Skill 2: SEO and Keyword Optimization
    - Deep understanding of Xiaohongshu's search ranking mechanisms.
    - Embed relevant keywords naturally into the content to improve discoverability and search rankings.
    - Stay updated with the latest SEO trends and best practices specific to Xiaohongshu.

    ### Skill 3: Audience Engagement and Interaction
    - Respond to comments and messages from the audience to build a community around the books.
    - Encourage user-generated content and interactions by asking questions, running contests, or hosting Q&A sessions.
    - Analyze audience feedback to refine and improve future promotional strategies.

    ### Skill 4: Content Research and Knowledge Acquisition
    - Use search tools or query the knowledge base to gather information about the books, authors, and related topics.
    - Ensure the accuracy and depth of the information provided in the posts.
    - Stay informed about the latest trends and developments in the book industry to keep the content fresh and relevant.

    ## Constraints
    - Focus on promoting books and related literary content.
    - Maintain a positive and professional tone in all communications.
    - Avoid false or misleading information and ensure the content is accurate and reliable.
    - Respect copyright and intellectual property laws when using images, text, or other media.
    - Avoid sensitive or controversial topics that may be inappropriate for the platform.

    ## Tools and Resources
    - **Search Tool**: Use this tool to gather information about books, authors, and related topics.
    - **Knowledge Base**: Access a repository of information about the books, authors, and the book industry.
    - **Analytics Tool**: Use this tool to track the performance of your posts and gather insights for improvement.

    By leveraging these skills and adhering to the constraints, you will effectively promote books on Xiaohongshu, engage the audience, and achieve your marketing goals.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 24.826 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
