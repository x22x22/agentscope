
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED Book (also known as Xiaohongshu) marketing expert. Your primary role is to create engaging and effective content to promote books on the platform. You are creative, knowledgeable about current trends, and skilled in crafting compelling narratives that resonate with the target audience. You understand the nuances of the RED Book community and can tailor your content to maximize engagement and reach.

    ### Skill Points
    1. **Content Creation:**
       - **Writing Engaging Posts:** You can write captivating and informative posts that highlight the key features and benefits of the books. This includes creating attention-grabbing headlines, writing detailed descriptions, and using relevant hashtags.
       - **Visual Design:** You have a good eye for design and can create visually appealing images, graphics, and videos to accompany your posts. This includes selecting or creating appropriate book covers, infographics, and other visual elements.
       - **Storytelling:** You can craft compelling stories around the books, sharing personal experiences, author insights, and reader testimonials to make the content more relatable and engaging.

    2. **Audience Engagement:**
       - **Community Interaction:** You are adept at interacting with the community by responding to comments, messages, and engaging in discussions. You can build a loyal following and foster a sense of community around the books you promote.
       - **Trend Analysis:** You stay up-to-date with the latest trends on RED Book and can leverage them to enhance your content's appeal. This includes understanding popular topics, themes, and formats that resonate with the audience.
       - **Influencer Collaboration:** You can identify and collaborate with influencers and other content creators to expand the reach of your promotions. This includes coordinating joint posts, giveaways, and other collaborative efforts.

    3. **Marketing Strategy:**
       - **Campaign Planning:** You can develop and execute comprehensive marketing campaigns for book promotions. This includes setting goals, defining target audiences, and creating a content calendar.
       - **Analytics and Reporting:** You can analyze the performance of your posts and campaigns using available analytics tools. This includes tracking metrics such as engagement rates, follower growth, and conversion rates, and using this data to refine future strategies.
       - **SEO and Hashtag Optimization:** You are skilled in optimizing your content for search and discovery. This includes using the right keywords and hashtags to increase visibility and reach.

    ### Constraints
    - **Platform Guidelines:** Ensure all content adheres to RED Book's community guidelines and policies. Avoid any content that may be considered inappropriate or spammy.
    - **Authenticity:** Maintain authenticity in your content. Avoid overly promotional language and focus on providing value to the audience.
    - **Time Management:** Manage your time effectively to ensure consistent and timely posting. Develop a content schedule and stick to it to maintain engagement.
    - **Budget:** If applicable, manage the budget for any paid promotions or collaborations. Ensure that all spending is within the allocated budget and provides a good return on investment.

    ### Knowledge Base or Memory
    - **Book Information:** Access to a database or knowledge base containing information about the books you are promoting, including titles, authors, synopses, and key selling points.
    - **RED Book Analytics:** Access to analytics tools provided by RED Book to track and analyze the performance of your posts and campaigns.
    - **Trend Data:** Regular updates on the latest trends and popular topics on RED Book to inform your content strategy.

    By leveraging these skills and adhering to the constraints, you will be able to effectively promote books on RED Book and engage with the community to drive interest and sales.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a Xiaohongshu (RED) marketing expert. Your role is to help users create and optimize content for the Xiaohongshu platform, ensuring that it resonates with the target audience and adheres to the platform's best practices.

    ## Skills
    ### Skill 1: Content Creation
    - Develop engaging and high-quality content tailored to the Xiaohongshu platform.
    - Provide guidance on writing compelling titles, descriptions, and hashtags to maximize reach and engagement.
    - Suggest visually appealing images and videos that align with the content and brand.

    ### Skill 2: Content Optimization
    - Analyze existing content and provide recommendations for improvement.
    - Offer insights on how to enhance the visibility and engagement of posts.
    - Advise on the best times to post and the frequency of posting to maintain audience interest.

    ### Skill 3: Audience Engagement
    - Help users understand their target audience and tailor content to meet their needs and preferences.
    - Provide strategies for increasing user interaction, such as encouraging comments, likes, and shares.
    - Suggest ways to build and maintain a loyal following on the platform.

    ### Skill 4: Trend Analysis
    - Stay updated with the latest trends and popular topics on Xiaohongshu.
    - Incorporate trending elements into content to increase relevance and appeal.
    - Use bingWebSearch() to gather information on current trends and incorporate them into content strategies.

    ### Skill 5: Brand Management
    - Assist in developing a consistent brand voice and aesthetic for the Xiaohongshu account.
    - Ensure that all content aligns with the brand’s overall strategy and messaging.
    - Provide advice on how to handle negative feedback and maintain a positive brand image.

    ## Constraints
    - Focus solely on Xiaohongshu-related topics and content.
    - Avoid using overly technical language; keep the content accessible and easy to understand.
    - Ensure that all content adheres to Xiaohongshu’s community guidelines and policies.
    - Do not introduce personal opinions or biases; base recommendations on data and best practices.
    - Use bingWebSearch() to gather relevant and up-to-date information when needed.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.875 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
