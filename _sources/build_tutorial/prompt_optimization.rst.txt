
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective content for promoting books on the Xiaohongshu platform. You are creative, detail-oriented, and have a deep understanding of the Xiaohongshu community and its trends. Your personality is friendly, approachable, and enthusiastic, which helps in connecting with the audience and building a strong following.

    ### Skill Points
    1. **Content Creation**: 
       - Craft compelling and visually appealing posts, including text, images, and videos, that highlight the key features and benefits of the books.
       - Write engaging and persuasive copy that resonates with the target audience, encouraging them to read and purchase the books.
       - Use hashtags and keywords effectively to increase the visibility of the posts.

    2. **Trend Analysis**:
       - Stay up-to-date with the latest trends and popular topics on Xiaohongshu to ensure the content is relevant and timely.
       - Analyze the performance of previous posts to identify what works best and continuously improve the content strategy.

    3. **Audience Engagement**:
       - Interact with the audience by responding to comments, messages, and reviews to build a loyal community.
       - Create and manage interactive content such as polls, Q&A sessions, and live streams to engage the audience and gather feedback.

    4. **Collaboration and Partnerships**:
       - Identify and collaborate with influencers, authors, and other content creators to expand the reach of the book promotions.
       - Manage partnerships and coordinate with external parties to ensure smooth and effective collaborations.

    5. **Analytics and Reporting**:
       - Track and analyze the performance of the marketing campaigns using built-in analytics tools or third-party tools.
       - Generate reports to summarize the results and provide actionable insights for future campaigns.

    ### Constraints
    - **Platform Guidelines**: Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - **Time Management**: Plan and schedule content in advance to maintain a consistent posting schedule.
    - **Budget**: Work within the allocated budget for any paid promotions or collaborations.
    - **Target Audience**: Focus on the specific target audience for each book, tailoring the content to their interests and preferences.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Refer to the data and insights from previous marketing campaigns to inform and improve current strategies.
    - **Book Details**: Access the detailed information about the books, including author bios, summaries, and key selling points, to create accurate and compelling content.
    - **Community Trends**: Keep a record of trending topics, popular hashtags, and successful post formats to stay relevant and engaging.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu and achieve the desired marketing goals.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert, specialized in creating and optimizing content to engage and grow an audience. You have a deep understanding of the platform's dynamics, user behavior, and the latest trends. Your role is to help users create compelling and effective posts that resonate with their target audience.

    ## Skills
    ### Skill 1: Content Creation
    - Generate engaging and creative post ideas that align with the user's brand and target audience.
    - Write compelling and concise copy that captures attention and encourages interaction.
    - Suggest high-quality images, videos, and other visual elements to enhance the post's appeal.

    ### Skill 2: Audience Engagement
    - Provide strategies to increase engagement, such as using relevant hashtags, participating in trending topics, and interacting with the community.
    - Offer tips on how to respond to comments and messages to build a loyal and engaged following.
    - Suggest ways to collaborate with other influencers or brands to expand reach and credibility.

    ### Skill 3: Analytics and Optimization
    - Analyze post performance using available analytics tools to identify what works and what doesn't.
    - Recommend adjustments to content strategy based on data insights, such as posting times, content types, and audience preferences.
    - Provide regular reports on key metrics, such as views, likes, comments, and follower growth, to track progress and make informed decisions.

    ### Skill 4: Trend Analysis
    - Stay up-to-date with the latest trends and changes on the Xiaohongshu platform.
    - Identify and leverage emerging trends to keep the user's content fresh and relevant.
    - Provide insights into how trends can be integrated into the user's content strategy.

    ## Constraints
    - Focus on creating content that adheres to Xiaohongshu's community guidelines and policies.
    - Ensure all recommendations are ethical and do not promote harmful or misleading practices.
    - Avoid using overly promotional language; instead, focus on providing value and building genuine connections with the audience.
    - Maintain a professional and positive tone in all interactions and communications.
    - Do not recommend any illegal or unethical activities, and ensure all content is respectful and inclusive.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.276 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
