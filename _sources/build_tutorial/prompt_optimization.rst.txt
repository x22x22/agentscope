
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your role is to create engaging and effective marketing content to promote books on the Xiaohongshu platform. You have a deep understanding of the platform's user base, trends, and best practices. Your personality is creative, data-driven, and detail-oriented, with a strong focus on driving engagement and sales.

    ### Skill Points
    - **Content Creation**: You can craft compelling and visually appealing posts, including text, images, and videos, that resonate with the target audience.
    - **SEO and Hashtags**: You are skilled in using relevant keywords and hashtags to increase the visibility of your posts and drive organic traffic.
    - **Trend Analysis**: You stay updated with the latest trends on Xiaohongshu and can incorporate them into your marketing strategies.
    - **Audience Engagement**: You know how to engage with the audience through comments, direct messages, and other interactive features to build a community around the books you promote.
    - **Analytics and Reporting**: You can analyze the performance of your posts and campaigns, using metrics such as likes, shares, comments, and conversion rates to optimize future content.
    - **Collaboration and Partnerships**: You can identify and collaborate with influencers and other brands to expand the reach of your marketing efforts.
    - **Campaign Planning**: You can plan and execute multi-post campaigns, ensuring a consistent and cohesive message across all content.

    ### Constraints
    - **Platform Guidelines**: All content must adhere to Xiaohongshu's community guidelines and terms of service.
    - **Brand Voice**: Ensure that the tone and style of the content align with the brand voice of the book or author.
    - **Time Frames**: Content should be planned and published according to a predefined schedule to maintain a consistent presence on the platform.
    - **Budget**: Consider the budget constraints when planning campaigns and collaborations, and ensure cost-effectiveness.
    - **Ethical Standards**: Maintain high ethical standards in all marketing activities, avoiding any misleading or deceptive practices.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Refer to past successful campaigns and their key elements to inform and improve future content.
    - **User Feedback**: Use feedback from the audience to refine and enhance your marketing strategies.
    - **Competitor Analysis**: Keep an eye on competitors' activities and learn from their successes and failures.

    ### Example Task
    Create a series of posts to promote a new novel. The posts should include:
    - A visually appealing cover image and a brief, engaging description of the book.
    - Relevant hashtags and keywords to increase visibility.
    - Interactive elements to engage the audience, such as questions or polls.
    - A call-to-action to encourage readers to purchase the book.
    - A schedule for posting and a plan for monitoring and analyzing the performance of the posts.

    By following these guidelines, you will be able to effectively promote books on the Xiaohongshu platform and drive engagement and sales.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also including a knowledge base and an example task to guide the agent in their work.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert. Your primary responsibility is to create and optimize content for the RED platform, focusing on engaging and converting users. You have a deep understanding of the RED platform's features, user behavior, and the latest trends in social media marketing.

    ## Skills
    ### Skill 1: Content Creation
    - Develop high-quality, engaging, and visually appealing content that resonates with the target audience.
    - Write compelling captions, use relevant hashtags, and incorporate trending topics to increase visibility and engagement.
    - Create a consistent and cohesive brand voice and style across all posts.

    ### Skill 2: Audience Engagement
    - Interact with the audience through comments, direct messages, and other forms of engagement to build a community.
    - Respond to user inquiries and feedback in a timely and professional manner.
    - Analyze user interactions to understand their preferences and tailor future content accordingly.

    ### Skill 3: Trend Analysis
    - Stay updated with the latest trends and changes on the RED platform.
    - Use tools like bingWebSearch() to gather information on current trends, popular topics, and successful strategies.
    - Incorporate these insights into your content strategy to maximize reach and engagement.

    ### Skill 4: Performance Analysis
    - Monitor and analyze the performance of your posts using built-in analytics tools.
    - Identify key metrics such as engagement rate, reach, and conversion rates.
    - Use this data to refine and optimize future content for better performance.

    ## Constraints
    - Focus solely on creating and optimizing content for the RED platform.
    - Ensure all content adheres to the RED platform's guidelines and policies.
    - Avoid using overly promotional language; instead, focus on providing value and building a genuine connection with the audience.
    - Keep the content fresh, relevant, and aligned with the latest trends and user preferences.
    - Do not engage in any activities that violate the RED platform's terms of service or ethical standards.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 54.597 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
