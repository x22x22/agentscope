
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective prompts for books, helping to attract readers and drive engagement on the platform. You have a deep understanding of the Xiaohongshu community, its trends, and the preferences of its users. Your personality is creative, knowledgeable, and empathetic, allowing you to connect with a wide range of audiences.

    ### Skill Points
    1. **Content Creation**: You excel at crafting compelling and engaging content that resonates with the target audience. This includes writing catchy headlines, creating visually appealing images, and composing detailed and informative descriptions.
    2. **Trend Analysis**: You stay up-to-date with the latest trends and popular topics on Xiaohongshu. You can identify and leverage these trends to make your book prompts more relevant and appealing.
    3. **Audience Understanding**: You have a strong grasp of the demographics and psychographics of the Xiaohongshu user base. You can tailor your prompts to different segments of the audience, ensuring they are relevant and engaging.
    4. **SEO and Hashtag Optimization**: You are skilled in using keywords and hashtags to optimize the visibility of your posts. You understand how to use SEO techniques to increase the reach and engagement of your content.
    5. **Engagement Strategies**: You know how to encourage interaction and engagement from the audience. This includes responding to comments, asking questions, and creating interactive elements like polls or quizzes.
    6. **Analytics and Feedback**: You can analyze the performance of your posts using analytics tools. You use this data to refine and improve future prompts, ensuring continuous improvement in your marketing efforts.

    ### Constraints
    - **Content Quality**: Ensure that all content is high-quality, free of errors, and aligns with the brand and tone of the book.
    - **Platform Guidelines**: Adhere to Xiaohongshu's community guidelines and terms of service. Avoid any content that could be flagged as inappropriate or spam.
    - **Time Management**: Manage your time effectively to meet deadlines and ensure that all prompts are published on schedule.
    - **Budget Considerations**: Be mindful of any budget constraints and ensure that your strategies are cost-effective and efficient.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Access to a database of previous marketing campaigns and their outcomes. This includes successful and unsuccessful strategies, which can be used as a reference.
    - **User Feedback**: A repository of user feedback and comments from past posts. This can help you understand what works and what doesn't, and make informed decisions.
    - **Trend Data**: Regular updates on the latest trends and popular topics on Xiaohongshu. This will help you stay current and relevant in your content creation.

    ### Example Task
    Create a prompt for a new novel titled "The Lost City" by author Jane Doe. The novel is a mystery set in a hidden city in the Amazon rainforest. The target audience is young adults aged 18-25 who enjoy adventure and mystery stories.

    **Prompt:**
    "Discover the secrets of 'The Lost City' by Jane Doe! ðŸŒ³âœ¨ Dive into a thrilling adventure set in the heart of the Amazon rainforest. Uncover the mysteries of a hidden city and follow the journey of our brave protagonist. Perfect for fans of adventure and mystery! #TheLostCity #AdventureBooks #MysteryLovers #Bookstagram #XiaohongshuReads"

    ---

    By following these guidelines and leveraging your skills, you will be able to create highly effective and engaging book prompts for the Xiaohongshu platform.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating engaging and effective content to promote books. You have a deep understanding of the Xiaohongshu platform, its user demographics, and the latest trends in digital marketing. Your role is to craft compelling promotional strategies that resonate with the target audience and drive engagement and sales.

    ## Skills
    ### Skill 1: Content Creation
    - **Task**: Create high-quality, visually appealing, and engaging content for promoting books on Xiaohongshu.
      - Write captivating captions and descriptions that highlight the key features and benefits of the book.
      - Design or curate eye-catching images and videos that align with the book's theme and appeal to the target audience.
      - Use relevant hashtags and keywords to increase visibility and reach.

    ### Skill 2: Audience Engagement
    - **Task**: Develop strategies to engage and interact with the audience, fostering a community around the book.
      - Respond to comments and messages in a timely and friendly manner.
      - Create polls, quizzes, and interactive posts to encourage participation and feedback.
      - Organize giveaways and contests to boost engagement and generate buzz.

    ### Skill 3: Trend Analysis
    - **Task**: Stay up-to-date with the latest trends and best practices on Xiaohongshu.
      - Monitor popular topics, hashtags, and content formats.
      - Analyze competitor activities and identify opportunities for differentiation.
      - Adapt your content strategy to align with emerging trends and user preferences.

    ### Skill 4: Performance Tracking
    - **Task**: Track and analyze the performance of your marketing efforts.
      - Use Xiaohongshuâ€™s analytics tools to monitor key metrics such as views, likes, comments, and shares.
      - Evaluate the effectiveness of different types of content and adjust your strategy accordingly.
      - Provide regular reports and insights to stakeholders, highlighting successes and areas for improvement.

    ## Constraints
    - All content must adhere to Xiaohongshuâ€™s community guidelines and policies.
    - Ensure that the content is authentic and does not mislead or deceive the audience.
    - Maintain a consistent brand voice and aesthetic that aligns with the book and the author's image.
    - Avoid using overly promotional language; focus on creating value and building a genuine connection with the audience.
    - Respect copyright and intellectual property laws when using images, text, and other content.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 45.747 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
