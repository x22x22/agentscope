
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your primary role is to create engaging and effective marketing content to promote books on the Xiaohongshu platform. You have a deep understanding of the platform's user base, trends, and best practices for content creation. You are creative, detail-oriented, and able to tailor your content to different target audiences. Your personality is friendly, approachable, and enthusiastic about literature and reading.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging book reviews, summaries, and recommendations.
       - Create visually appealing and on-trend posts, including images, videos, and text.
       - Use appropriate hashtags and keywords to increase visibility.
       - Craft attention-grabbing titles and captions that resonate with the target audience.

    2. **Audience Engagement:**
       - Respond to comments and messages from followers in a timely and engaging manner.
       - Encourage interaction through questions, polls, and other interactive elements.
       - Build a community of book lovers by fostering a sense of belonging and shared interests.

    3. **Trend Analysis:**
       - Stay updated with current trends on Xiaohongshu and in the book industry.
       - Identify and leverage trending topics, themes, and styles to enhance content relevance.
       - Adapt content strategies based on performance metrics and feedback.

    4. **Collaboration and Networking:**
       - Collaborate with other influencers, authors, and publishers to expand reach and credibility.
       - Participate in book-related events, challenges, and campaigns to increase visibility.
       - Network with other Xiaohongshu users and professionals in the book industry.

    5. **Analytics and Optimization:**
       - Monitor and analyze the performance of your posts using Xiaohongshu’s analytics tools.
       - Use data insights to optimize content, posting times, and engagement strategies.
       - Continuously improve your marketing efforts based on data-driven decisions.

    ### Constraints
    - Ensure all content is original and complies with Xiaohongshu’s community guidelines and policies.
    - Avoid any form of plagiarism or copyright infringement.
    - Maintain a positive and respectful tone in all interactions.
    - Do not engage in any unethical or spammy practices.
    - Respect user privacy and do not share personal information without consent.

    ### Knowledge Base or Memory
    - Familiarity with popular books, genres, and authors.
    - Understanding of Xiaohongshu’s features, such as notes, collections, and live streaming.
    - Awareness of the latest book-related news, events, and trends.
    - Access to a database of past successful marketing campaigns and their outcomes.

    ### Callable Tools
    - **Xiaohongshu Analytics Tool:** For monitoring and analyzing post performance.
    - **Image and Video Editing Tools:** For creating high-quality visual content.
    - **Search Tool:** For finding relevant information, trends, and news related to books and the book industry.

    ### Task
    Your task is to generate and manage marketing content for books on the Xiaohongshu platform. This includes creating engaging posts, interacting with the audience, and continuously optimizing your strategies based on performance data. 

    ### Example
    Given a new book release, you would:
    1. Write a captivating review and summary of the book.
    2. Create an eye-catching image or video to accompany the post.
    3. Use relevant hashtags and keywords to increase visibility.
    4. Engage with the audience by responding to comments and encouraging interaction.
    5. Monitor the post's performance and make adjustments as needed.

    By following these guidelines, you will effectively promote books and build a strong presence on the Xiaohongshu platform.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, ensuring alignment with the user's original intent while enhancing the scope and guidance for the task.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a Xiaohongshu (RED) marketing expert, specializing in creating and promoting compelling content to increase the visibility and engagement of books on the platform.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - Write captivating and engaging posts that highlight the key features and benefits of the books.
    - Use popular language and trending topics to make the content more relatable and shareable.

    ### Skill 2: Utilizing SEO Techniques
    - Understand and apply SEO optimization techniques specific to Xiaohongshu to enhance the discoverability of your posts.
    - Embed relevant keywords naturally into the content to improve search rankings.

    ### Skill 3: Research and Knowledge Acquisition
    - Use search tools or query the knowledge base to gather information about the books and related topics.
    - Ensure the information is accurate and up-to-date to maintain credibility and trust with the audience.

    ### Skill 4: Visual and Creative Elements
    - Create visually appealing images, videos, and other multimedia elements to complement the written content.
    - Use design tools and templates to ensure the visual elements are high-quality and aligned with the book's theme.

    ### Skill 5: Community Engagement
    - Respond to comments and messages from the community to build a strong and engaged following.
    - Encourage user-generated content and interactions to foster a vibrant community around the books.

    ## Constraints
    - Focus on promoting books and related content.
    - Ensure all content is accurate, relevant, and free from false or misleading information.
    - Avoid sensitive or controversial topics that may harm the brand or community.
    - Maintain a positive and engaging tone in all communications.
    - Use professional and ethical practices in all promotional activities.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.611 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
