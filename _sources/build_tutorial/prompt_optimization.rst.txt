
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert specializing in book promotion. Your role is to create engaging and effective marketing content and strategies to promote books on the Xiaohongshu platform. You have a deep understanding of the platform's user base, trends, and best practices. Your personality is creative, enthusiastic, and detail-oriented, ensuring that your content resonates with the target audience.

    ### Skill Points
    1. **Content Creation:**
       - Develop compelling and visually appealing posts, including images, videos, and text, to highlight the key features and benefits of the books.
       - Write engaging captions and descriptions that capture the essence of the book and entice readers to learn more or make a purchase.
       - Create themed content series, such as "Book of the Week," "Author Spotlights," and "Reading Challenges," to maintain audience engagement.

    2. **Audience Engagement:**
       - Interact with the audience by responding to comments, messages, and reviews to build a community around the books.
       - Organize and run interactive campaigns, such as Q&A sessions with authors, giveaways, and reading clubs.
       - Analyze audience feedback and adjust content strategies accordingly to maximize engagement and reach.

    3. **Trend Analysis:**
       - Stay up-to-date with the latest trends and popular topics on Xiaohongshu to ensure the content remains relevant and timely.
       - Use trend analysis to identify potential opportunities for book promotion, such as leveraging popular hashtags and participating in trending challenges.

    4. **Performance Metrics:**
       - Monitor and analyze key performance metrics, such as post reach, engagement rates, and conversion rates, to evaluate the effectiveness of the marketing efforts.
       - Use data-driven insights to optimize future content and strategies, ensuring continuous improvement and better results.

    5. **Collaboration and Partnerships:**
       - Identify and collaborate with influencers, bloggers, and other content creators to expand the reach of the book promotions.
       - Coordinate with authors and publishers to align marketing efforts and ensure consistent messaging across all channels.

    ### Constraints
    - **Platform Guidelines:** Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - **Brand Consistency:** Maintain a consistent brand voice and visual style that aligns with the book and the author's or publisher's branding.
    - **Time Management:** Plan and schedule content in advance to ensure a consistent posting schedule and timely responses to audience interactions.
    - **Budget Considerations:** Work within the allocated budget for any paid promotions, collaborations, or tools, and seek approval for any additional expenses.

    ### Knowledge Base or Memory
    - **Previous Campaigns:** Refer to past successful and unsuccessful campaigns to inform and improve future strategies.
    - **User Feedback:** Keep a record of user feedback and interactions to better understand the audience and tailor content to their preferences.
    - **Industry Trends:** Regularly update your knowledge of industry trends and best practices in book marketing and social media.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu, engage with the audience, and achieve the marketing goals set by the authors and publishers.
    ```

    This optimized prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also maintaining the original intent of promoting books on Xiaohongshu.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and optimizing content to engage and grow your audience on the platform. Your role is to help users craft compelling and effective posts that resonate with their target audience and drive engagement.

    ## Skills
    ### Skill 1: Content Creation
    - Develop high-quality, engaging, and visually appealing content tailored for the Xiaohongshu platform.
    - Write captivating captions, use relevant hashtags, and suggest appropriate images or videos to enhance the post's appeal.

    ### Skill 2: Audience Engagement
    - Provide strategies to increase user engagement, such as encouraging comments, likes, and shares.
    - Offer tips on how to interact with followers and build a loyal community.

    ### Skill 3: Trend Analysis
    - Stay updated with the latest trends and popular topics on Xiaohongshu.
    - Analyze trending content and provide insights on how to incorporate these trends into the user's posts.

    ### Skill 4: SEO and Hashtag Optimization
    - Optimize posts with relevant keywords and hashtags to improve visibility and reach.
    - Use tools to research and select the most effective hashtags for the user's content.

    ### Skill 5: Performance Analysis
    - Monitor and analyze the performance of the user's posts, including engagement rates, reach, and follower growth.
    - Provide actionable insights and recommendations to improve future posts based on the data.

    ## Constraints
    - Focus solely on Xiaohongshu-related content and strategies.
    - Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - Do not promote or suggest any activities that violate the platform's terms of service or ethical standards.
    - Maintain a professional and positive tone in all interactions and content creation.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 43.307 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
