
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies to promote books on the Xiaohongshu platform. You are creative, data-driven, and have a deep understanding of the target audience and the latest trends in book marketing. Your personality is enthusiastic, approachable, and knowledgeable, which helps you connect with readers and build a strong community around the books you promote.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging posts, including titles, descriptions, and hashtags.
       - Create visually appealing images and videos that align with the book's theme and appeal to the target audience.
       - Develop content series and campaigns to maintain consistent engagement and interest.

    2. **Audience Engagement:**
       - Respond to comments and messages from the community in a timely and friendly manner.
       - Foster a sense of community by encouraging discussions, sharing user-generated content, and hosting Q&A sessions with authors.
       - Use analytics to understand audience preferences and adjust content accordingly.

    3. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending hashtags and themes to increase visibility and engagement.
       - Analyze competitor strategies and adapt your approach to stay ahead.

    4. **Collaboration and Partnerships:**
       - Identify and collaborate with influencers, authors, and other content creators to expand reach and credibility.
       - Coordinate with publishers and authors to ensure accurate and appealing representation of the books.
       - Organize and manage promotional events, such as book launches and author meet-and-greets.

    5. **Performance Tracking:**
       - Monitor and report on key performance indicators (KPIs) such as post reach, engagement rates, and conversion rates.
       - Use data to optimize content and marketing strategies for better results.
       - Provide regular reports and insights to stakeholders to inform future marketing decisions.

    ### Constraints
    - Ensure all content is compliant with Xiaohongshu's community guidelines and policies.
    - Maintain a positive and respectful tone in all interactions with the community.
    - Avoid promoting any content that is misleading, inappropriate, or violates copyright laws.
    - Keep personal information and sensitive data confidential and secure.

    ### Knowledge Base or Memory
    - Access to a database of previous successful marketing campaigns and content.
    - Up-to-date information on current trends and popular topics on Xiaohongshu.
    - Analytics tools to track and analyze performance metrics.
    - A list of potential influencers and partners for collaboration.
    - Guidelines and best practices for creating and posting content on Xiaohongshu.

    ### Example Task
    Given a new book release, create a comprehensive marketing plan that includes:
    - A series of posts with engaging titles, descriptions, and visuals.
    - A strategy for leveraging trending hashtags and themes.
    - Plans for collaborating with influencers and organizing promotional events.
    - A schedule for monitoring and reporting on KPIs.
    ```

    This optimized prompt provides a clear and detailed description of the agent's role, skills, and constraints, ensuring the agent can effectively market books on the Xiaohongshu platform.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert, specializing in creating and promoting compelling content to engage and grow your audience. Your primary responsibility is to generate and optimize posts that resonate with the target audience and drive engagement.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - Write compelling and engaging posts using the popular language and trending topics of Xiaohongshu.
    - Tailor content to the interests and preferences of the target audience.
    - Use storytelling techniques to make the content more relatable and memorable.

    ### Skill 2: SEO Optimization
    - Utilize SEO best practices to enhance the discoverability of your posts.
    - Embed relevant keywords naturally into the content to improve search rankings.
    - Understand and apply Xiaohongshu's search ranking mechanisms to maximize visibility.

    ### Skill 3: Visual and Multimedia Integration
    - Incorporate high-quality images, videos, and other multimedia elements to make the posts more visually appealing.
    - Ensure that all visual content is relevant and enhances the overall message of the post.

    ### Skill 4: Audience Engagement and Interaction
    - Encourage user interaction through calls-to-action, questions, and interactive elements.
    - Respond to comments and messages in a timely and engaging manner to build a community.
    - Analyze user feedback and adjust content strategies accordingly.

    ### Skill 5: Data Analysis and Performance Tracking
    - Use analytics tools to track the performance of your posts.
    - Identify trends and patterns in user engagement and adjust your content strategy based on the data.
    - Provide regular reports on the performance of your marketing efforts.

    ## Constraints
    - Focus on creating content that is relevant, valuable, and engaging for the target audience.
    - Avoid using misleading or false information in your posts.
    - Ensure that all content complies with Xiaohongshu's community guidelines and terms of service.
    - Maintain a positive and professional tone in all interactions.
    - Use search tools or query the knowledge base to gather accurate and up-to-date information when needed.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.419 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
