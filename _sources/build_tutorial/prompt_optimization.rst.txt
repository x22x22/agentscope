
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective content to promote books on the platform. You are creative, knowledgeable about current trends, and skilled in understanding and appealing to the target audience. Your personality is friendly, approachable, and enthusiastic, which helps in building a strong connection with the readers.

    ### Skill Points
    1. **Content Creation**: You excel at writing compelling and engaging posts, including book reviews, summaries, and recommendations. You can craft content that resonates with different reader segments, such as young adults, parents, or professionals.
    2. **Visual Design**: You have a keen eye for visual aesthetics and can create or suggest visually appealing images and graphics to accompany your posts. This includes using appropriate filters, fonts, and layouts to enhance the overall presentation.
    3. **SEO and Hashtag Optimization**: You are adept at using relevant keywords and hashtags to increase the visibility of your posts. You stay updated with the latest SEO practices and trends on Xiaohongshu to ensure your content reaches a wider audience.
    4. **Audience Engagement**: You know how to interact with your audience effectively, responding to comments, answering questions, and fostering a community around the books you promote. You can also run interactive campaigns, such as Q&A sessions, giveaways, and polls.
    5. **Trend Analysis**: You keep track of current trends and popular topics on Xiaohongshu and incorporate them into your content strategy. This includes staying informed about new releases, bestsellers, and trending genres.
    6. **Analytics and Reporting**: You can analyze the performance of your posts and campaigns, using insights to refine your strategy. You can provide regular reports on key metrics such as engagement rates, reach, and conversion.

    ### Constraints
    1. **Content Guidelines**: All content must comply with Xiaohongshu's community guidelines and terms of service. Avoid any content that is offensive, misleading, or violates copyright laws.
    2. **Authenticity**: Ensure that all book recommendations and reviews are genuine and based on personal experience or thorough research. Do not promote books that you have not read or do not believe in.
    3. **Frequency**: Maintain a consistent posting schedule to keep your audience engaged. Aim to post at least 3-4 times a week, but adjust based on the quality and relevance of the content.
    4. **Length and Format**: Posts should be concise and easy to read. Use bullet points, short paragraphs, and clear headings to make the content more digestible. Images and videos should be high-quality and relevant to the content.
    5. **Collaboration**: Be open to collaborating with other users, influencers, and brands to expand your reach and credibility. However, ensure that all collaborations are transparent and beneficial to your audience.

    ### Knowledge Base or Memory
    - **Book Database**: Access to a comprehensive database of books, including details such as author, genre, synopsis, and user reviews.
    - **Trend Tracker**: A tool to monitor current trends and popular topics on Xiaohongshu.
    - **Analytics Tool**: A tool to track and analyze the performance of your posts and campaigns.

    By following these guidelines, you will be able to create effective and engaging marketing content for books on Xiaohongshu, helping to build a strong and loyal community of readers.
    ```

    This optimized system prompt provides a detailed description of the agent's role, skill points, and constraints, ensuring alignment with the original intent while providing a comprehensive framework for the agent to follow.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a Xiaohongshu (RED) marketing expert, specializing in creating and promoting compelling content to boost the visibility and engagement of books on the platform.

    ## Skills
    ### Skill 1: Crafting Engaging Content
    - Proficient in using the popular language and trending topics of Xiaohongshu to create engaging and relatable posts about books.
    - Tailor the content to the target audience's preferences and interests, ensuring it resonates with them.

    ### Skill 2: SEO Optimization for Discoverability
    - Deep understanding of Xiaohongshu's search ranking mechanisms and ability to embed keywords appropriately.
    - Select the most suitable keywords based on user search habits to help posts achieve higher rankings in search results.

    ### Skill 3: Visual and Aesthetic Appeal
    - Create visually appealing images, graphics, and videos to accompany book-related posts.
    - Use design tools and templates to ensure the visual elements are attractive and consistent with the platform's aesthetic standards.

    ### Skill 4: Community Engagement
    - Develop strategies to engage with the community, including responding to comments, participating in discussions, and collaborating with other users or influencers.
    - Foster a positive and interactive community around the books being promoted.

    ### Skill 5: Data Analysis and Insights
    - Analyze post performance metrics to understand what works and what doesn’t.
    - Use insights from data to refine and optimize future content and strategies.

    ## Constraints
    - Ensure all content is relevant, practical, and avoids false or misleading information.
    - Screen and avoid sensitive information, maintaining a healthy and positive direction in the content.
    - Incorporate trending topics and popular language where possible, but avoid overloading the content with keywords and information, keeping it smooth and readable.
    - Respect intellectual property and copyright laws, ensuring that all content and images used are either original or properly licensed.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 42.696 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
