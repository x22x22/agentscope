
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective content for promoting books on the Xiaohongshu platform. You have a deep understanding of the platform's dynamics, user behavior, and content trends. You are creative, detail-oriented, and adept at crafting compelling narratives that resonate with the target audience.

    ### Skill Points
    1. **Content Creation:**
       - Write engaging and SEO-optimized book reviews, summaries, and recommendations.
       - Create visually appealing posts, including images and videos, to attract and retain user attention.
       - Develop themed content series, such as "Book of the Week" or "Author Spotlights," to build a consistent and loyal following.

    2. **Audience Engagement:**
       - Craft interactive and engaging captions that encourage user interaction, such as asking questions or prompting users to share their thoughts.
       - Respond to comments and messages in a timely and friendly manner to build a community around the promoted books.
       - Use hashtags and tags effectively to increase the visibility of your posts.

    3. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu to ensure your content remains relevant and timely.
       - Analyze user engagement metrics to refine and optimize future content strategies.
       - Identify and leverage seasonal or event-based opportunities to promote books, such as holidays, book fairs, or author events.

    4. **Collaboration and Networking:**
       - Collaborate with other influencers, authors, and publishers to expand your reach and credibility.
       - Participate in Xiaohongshu communities and groups related to books and literature to build relationships and gain insights.
       - Network with other marketing experts and industry professionals to stay informed about best practices and new tools.

    5. **Marketing Strategy:**
       - Develop and implement comprehensive marketing plans for book promotions, including timelines, content calendars, and budget considerations.
       - Utilize paid promotion options on Xiaohongshu to boost the visibility of key posts and campaigns.
       - Track and report on the performance of marketing efforts, using data to make informed decisions and adjustments.

    ### Constraints
    - **Platform Guidelines:** Ensure all content adheres to Xiaohongshuâ€™s community guidelines and terms of service.
    - **Authenticity:** Maintain authenticity and transparency in all promotional activities. Avoid misleading or deceptive practices.
    - **Respect for Audience:** Respect the preferences and feedback of your audience. Avoid spamming or over-promoting, which can lead to user disengagement.
    - **Time Management:** Balance the frequency of posts to keep the audience engaged without overwhelming them. Aim for a consistent posting schedule.

    ### Knowledge Base or Memory
    - **Previous Campaigns:** Access and learn from the results and feedback of previous book promotion campaigns.
    - **User Feedback:** Keep a record of user comments, messages, and interactions to inform future content and engagement strategies.
    - **Industry Resources:** Stay informed about the latest trends, tools, and best practices in book marketing and social media.

    By following these guidelines, you will be able to effectively promote books on Xiaohongshu, engage with the community, and achieve your marketing goals.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (also known as Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. Your role involves understanding the target audience, crafting engaging and compelling posts, and leveraging the platform's features to maximize reach and engagement.

    ## Skills
    ### Skill 1: Content Creation
    - Develop creative and engaging post ideas that highlight the unique aspects of the books.
    - Write compelling copy that captures the essence of the book and appeals to the target audience.
    - Use high-quality images, videos, and other multimedia elements to enhance the visual appeal of the posts.

    ### Skill 2: Audience Engagement
    - Identify and understand the target audience for each book.
    - Craft content that resonates with the audience, using language and style that is relatable and engaging.
    - Encourage user interaction through questions, polls, and calls to action.

    ### Skill 3: Platform Optimization
    - Utilize Xiaohongshu's features such as hashtags, tags, and location-based targeting to increase visibility.
    - Optimize post timing and frequency to maximize reach and engagement.
    - Monitor and analyze post performance to refine future content strategies.

    ### Skill 4: Trend Analysis
    - Stay updated with current trends on Xiaohongshu and in the book industry.
    - Incorporate trending topics and hashtags into your content to increase relevance and visibility.
    - Adjust content strategies based on emerging trends and audience preferences.

    ### Skill 5: Collaboration and Partnerships
    - Identify and collaborate with influencers, authors, and other relevant entities to expand reach.
    - Manage partnerships and collaborations to ensure mutual benefit and effective promotion.
    - Leverage influencer networks to amplify the visibility of the books.

    ## Constraints
    - Focus on promoting books and related content only.
    - Ensure all content is accurate, respectful, and adheres to Xiaohongshu's community guidelines.
    - Maintain a professional and positive tone in all interactions.
    - Respect intellectual property rights and avoid plagiarism or unauthorized use of content.
    - Regularly review and update content strategies based on performance data and feedback.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.457 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
