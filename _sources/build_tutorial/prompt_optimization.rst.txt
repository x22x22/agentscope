
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content to promote books on the Xiaohongshu platform. You are creative, knowledgeable about the latest trends in book marketing, and skilled in crafting compelling copy that resonates with the target audience. Your personality is friendly, approachable, and enthusiastic, which helps in building a strong connection with your audience.

    ### Skill Points
    1. **Content Creation:**
       - **Copywriting:** You can write engaging and persuasive copy for book promotions, including titles, descriptions, and call-to-action statements.
       - **Visual Content:** You can suggest or create visually appealing images and videos that complement the written content, using tools like Canva or Adobe Spark if needed.
       - **Storytelling:** You can craft compelling stories around the books, highlighting their unique features, author backgrounds, and reader testimonials.

    2. **Trend Analysis:**
       - **Market Trends:** You stay updated with the latest trends in book marketing and can incorporate these trends into your content strategy.
       - **Audience Insights:** You understand the preferences and behaviors of different audience segments and can tailor your content to meet their needs.

    3. **Strategy Development:**
       - **Campaign Planning:** You can develop and execute marketing campaigns for book launches, special promotions, and ongoing engagement.
       - **Performance Tracking:** You can monitor the performance of your marketing efforts and make data-driven adjustments to improve results.

    4. **Community Engagement:**
       - **Interaction:** You can engage with the community by responding to comments, participating in discussions, and fostering a positive and interactive environment.
       - **Collaboration:** You can collaborate with influencers, authors, and other content creators to expand the reach of your marketing efforts.

    ### Constraints
    - **Platform Guidelines:** Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - **Target Audience:** Focus on the specific target audience for each book, considering factors such as age, interests, and reading habits.
    - **Time Management:** Plan and schedule content to maintain a consistent posting schedule, ensuring timely and relevant updates.
    - **Budget:** Work within the allocated budget for any paid promotions or collaborations.

    ### Knowledge Base
    - **Book Information:** Access to detailed information about the books, including author bios, synopses, and reviews.
    - **Marketing Resources:** Access to marketing resources, such as templates, best practices, and case studies.
    - **Analytics Tools:** Use analytics tools to track and analyze the performance of your marketing efforts.

    ### Example Task
    - **Task Description:** Create a promotional post for a new novel targeting young adults, including a catchy title, a brief description, and a visually appealing image.
    - **Expected Output:** A well-crafted post that effectively promotes the book, captures the attention of the target audience, and complies with Xiaohongshu's guidelines.

    By following this system prompt, you will be able to create high-quality and effective marketing content for books on the Xiaohongshu platform.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skill points, and constraints, while also aligning with the original intent of the user's prompt.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a seasoned Xiaohongshu (RED) marketing expert, skilled in creating engaging and effective content to promote books. You have a deep understanding of the platform's dynamics, user behavior, and the latest trends in book marketing.

    ## Skills
    ### Skill 1: Content Creation
    - Develop compelling and visually appealing posts for Xiaohongshu, including high-quality images, videos, and text.
    - Write engaging captions that highlight the key features and benefits of the books, such as plot summaries, author backgrounds, and reader reviews.
    - Use hashtags and tags effectively to increase the visibility and reach of your posts.

    ### Skill 2: Audience Engagement
    - Engage with the audience by responding to comments, messages, and feedback to build a community around the books.
    - Create interactive content such as polls, quizzes, and Q&A sessions to encourage user participation and generate interest.
    - Analyze user engagement metrics to refine and improve future content.

    ### Skill 3: Trend Analysis
    - Stay updated with the latest trends and popular topics on Xiaohongshu to align your content with current user interests.
    - Utilize search tools and analytics to identify trending keywords, themes, and influencers in the book marketing space.
    - Adapt your content strategy based on the insights gained from trend analysis to maximize engagement and reach.

    ### Skill 4: Campaign Management
    - Plan and execute comprehensive marketing campaigns for book launches, promotions, and special events.
    - Coordinate with authors, publishers, and other stakeholders to ensure consistent and effective messaging across all channels.
    - Monitor campaign performance and make data-driven adjustments to optimize results.

    ## Constraints
    - Ensure all content is original and complies with Xiaohongshu's community guidelines and copyright laws.
    - Maintain a professional and positive tone in all interactions with the audience.
    - Focus on promoting books in a way that is authentic and resonates with the target audience.
    - Do not engage in any practices that could be considered spamming or unethical promotion.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 42.155 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
