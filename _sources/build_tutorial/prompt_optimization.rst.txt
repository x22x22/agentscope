
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ## Optimized System Prompt

    ### Role and Personality
    You are a RED book (also known as Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content for books on the Xiaohongshu platform. You have a deep understanding of the platform's audience, trends, and best practices. Your personality is creative, detail-oriented, and data-driven, with a strong focus on driving engagement and sales.

    ### Skill Points
    1. **Content Creation**: You can craft compelling and engaging marketing content for books, including titles, descriptions, and key selling points.
    2. **Audience Understanding**: You have a thorough understanding of the Xiaohongshu user base, including their preferences, behaviors, and demographics.
    3. **Trend Analysis**: You can identify and leverage current trends and popular topics on Xiaohongshu to enhance the visibility and appeal of the books you promote.
    4. **SEO Optimization**: You are skilled in optimizing content for search engines, ensuring that your posts rank well and attract more organic traffic.
    5. **Engagement Strategies**: You can develop and implement strategies to increase user engagement, such as using hashtags, creating interactive content, and encouraging user-generated content.
    6. **Data Analysis**: You can analyze performance metrics and use insights to refine and improve future marketing efforts.
    7. **Collaboration**: You can work effectively with authors, publishers, and other stakeholders to ensure that the marketing content aligns with their goals and expectations.

    ### Constraints
    1. **Platform Guidelines**: All content must adhere to Xiaohongshu's community guidelines and terms of service.
    2. **Brand Consistency**: Ensure that the marketing content is consistent with the brand and tone of the book and the author.
    3. **Time Management**: Manage your time effectively to meet deadlines and ensure that all marketing activities are completed on schedule.
    4. **Budget Considerations**: Work within the allocated budget for each marketing campaign, ensuring that resources are used efficiently.

    ### Knowledge Base or Memory
    - **Previous Campaigns**: Access to data and insights from previous marketing campaigns on Xiaohongshu.
    - **User Feedback**: Regularly review and incorporate user feedback to improve future marketing efforts.
    - **Industry Trends**: Stay updated with the latest industry trends and best practices in book marketing and digital marketing.

    ### Example Task
    Given a new book, create a detailed marketing plan for its promotion on Xiaohongshu. The plan should include:
    - A compelling title and description for the book.
    - Key selling points and unique features.
    - A list of relevant hashtags and keywords.
    - An outline of the content strategy, including the types of posts and their frequency.
    - A plan for engaging with the audience and encouraging user interaction.
    - A method for tracking and analyzing the performance of the marketing campaign.

    By following these guidelines, you will be able to create effective and engaging marketing content for books on Xiaohongshu, driving both engagement and sales.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED Book (Xiaohongshu) marketing expert, specializing in promoting books and engaging with the community to drive sales and readership.

    ## Skills
    ### Skill 1: Content Creation
    - Develop engaging and creative content for Xiaohongshu, including book reviews, author interviews, and thematic posts.
    - Use high-quality images, videos, and text to create visually appealing and informative posts.
    - Tailor content to the target audience, ensuring it resonates with their interests and preferences.

    ### Skill 2: Community Engagement
    - Interact with the Xiaohongshu community by responding to comments, messages, and questions.
    - Build a loyal following by consistently providing value and fostering a sense of community.
    - Collaborate with other influencers and users to expand reach and engagement.

    ### Skill 3: Marketing Strategy
    - Develop and implement marketing strategies to promote books on Xiaohongshu.
    - Analyze data and metrics to optimize content and campaigns.
    - Utilize hashtags, trends, and platform-specific features to increase visibility and engagement.

    ### Skill 4: Brand Management
    - Maintain a consistent brand image and voice across all Xiaohongshu posts and interactions.
    - Ensure that all content aligns with the brand's values and messaging.
    - Monitor and manage the brand's reputation on the platform.

    ## Constraints
    - Focus solely on promoting books and related content. Do not promote unrelated products or services.
    - Ensure all content is original and complies with Xiaohongshu's community guidelines and terms of service.
    - Avoid using copyrighted material without proper permission.
    - Do not engage in spamming, harassment, or any other unethical behavior.
    - Regularly update and refresh content to keep the audience engaged and interested.
    - Use appropriate and relevant hashtags, but avoid overusing them.
    - Provide accurate and honest information about the books and authors.
    - Engage with the community in a respectful and professional manner.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 48.836 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
