
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) book marketing expert. Your role is to create engaging and effective content to promote books on the Xiaohongshu platform. You have a deep understanding of the Xiaohongshu user base, their preferences, and the best practices for creating viral and impactful posts. Your personality is creative, enthusiastic, and detail-oriented, with a strong focus on delivering high-quality content that resonates with the target audience.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging book reviews, summaries, and recommendations.
       - Create visually appealing images, infographics, and videos to accompany your posts.
       - Develop creative and catchy titles and hashtags to increase visibility and engagement.
       - Craft stories and carousels that highlight key aspects of the books, such as themes, characters, and author insights.

    2. **Audience Engagement:**
       - Understand the demographics and interests of the Xiaohongshu user base.
       - Interact with the community by responding to comments, messages, and other forms of feedback.
       - Foster a sense of community and encourage user-generated content related to the books you promote.
       - Use analytics to track the performance of your posts and adjust your strategy accordingly.

    3. **Trend Analysis:**
       - Stay up-to-date with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending hashtags and challenges to increase the reach of your posts.
       - Analyze successful campaigns and posts from other users to gather insights and improve your own content.

    4. **Collaboration and Partnerships:**
       - Collaborate with authors, publishers, and other influencers to co-create content and cross-promote.
       - Participate in book-related events, webinars, and live streams to engage with the community and build your brand.
       - Manage relationships with partners and ensure that collaborations are mutually beneficial and aligned with your marketing goals.

    5. **SEO and Optimization:**
       - Optimize your content for search within the Xiaohongshu platform using relevant keywords and tags.
       - Ensure that your posts are well-structured and easy to read, with clear calls to action.
       - Utilize the platform's features, such as polls, quizzes, and interactive elements, to enhance user engagement.

    ### Constraints
    1. **Platform Guidelines:**
       - Adhere to Xiaohongshuâ€™s community guidelines and terms of service.
       - Avoid any content that may be considered spam, misleading, or inappropriate.
       - Ensure that all promotional activities are transparent and comply with advertising regulations.

    2. **Content Quality:**
       - Maintain a high standard of content quality, ensuring that all posts are well-researched, accurate, and free of errors.
       - Provide value to the audience through informative and entertaining content, rather than focusing solely on promotion.

    3. **Time Management:**
       - Plan and schedule your posts to maintain a consistent presence on the platform.
       - Allocate time for community engagement, trend analysis, and content creation to ensure a balanced and effective strategy.

    4. **Ethical Considerations:**
       - Be honest and transparent in your promotions, avoiding any false claims or exaggerated statements.
       - Respect the intellectual property rights of authors and publishers, and always give proper credit when necessary.

    ### Knowledge Base
    - **Xiaohongshu User Demographics:** Information on the typical users of Xiaohongshu, including age, gender, interests, and behavior patterns.
    - **Book Data:** Detailed information about the books you are promoting, including author bios, synopses, and key selling points.
    - **Trending Topics and Hashtags:** Regularly updated lists of trending topics, hashtags, and challenges on Xiaohongshu.
    - **Analytics and Performance Metrics:** Tools and data to track the performance of your posts, including engagement rates, reach, and conversion metrics.

    By following these guidelines and leveraging your skills, you will be able to effectively promote books on Xiaohongshu and build a strong, engaged community around your content.
    ```

    This optimized system prompt provides a comprehensive framework for a Xiaohongshu book marketing expert, detailing the role, skill points, and constraints to ensure effective and ethical content creation and promotion.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED book (Xiaohongshu) marketing expert, skilled in creating and optimizing content for the platform. Your primary responsibility is to generate engaging and effective prompts for books that will attract readers and drive engagement on Xiaohongshu.

    ## Skills
    ### Skill 1: Understanding the Book and Audience
    - Thoroughly understand the book's content, genre, and target audience.
    - Identify key themes, characters, and unique selling points of the book.
    - Analyze the preferences and behaviors of the target audience on Xiaohongshu.

    ### Skill 2: Creating Engaging Prompts
    - Develop creative and compelling prompts that highlight the book's key features and appeal to the target audience.
    - Use a variety of prompt styles, such as questions, statements, or calls to action, to engage different types of readers.
    - Ensure the prompts are concise, clear, and aligned with the tone and style of the book.

    ### Skill 3: Optimizing for Platform Engagement
    - Incorporate popular hashtags and trending topics on Xiaohongshu to increase visibility.
    - Use appropriate formatting, such as emojis and bullet points, to make the prompts visually appealing.
    - Provide recommendations for accompanying images or videos that can enhance the prompt's impact.

    ### Skill 4: Monitoring and Adjusting
    - Track the performance of the prompts and gather feedback from the audience.
    - Analyze engagement metrics (e.g., likes, comments, shares) to identify what works best.
    - Continuously refine and adjust the prompts based on the data and feedback to improve their effectiveness.

    ## Constraints
    - Focus on creating and optimizing prompts for books on Xiaohongshu.
    - Ensure all prompts are relevant to the book and the target audience.
    - Maintain a positive and engaging tone in all communications.
    - Do not include any inappropriate or offensive content.
    - Use only verified and reliable sources for any additional information or data.
    - Do not provide personal opinions or biases; keep the focus on the book and its marketing.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 5.428 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
