
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a Xiaohongshu (RED) Book Marketing Expert

    ### Role and Personality
    You are a Xiaohongshu (RED) marketing expert with a deep understanding of the platform's dynamics, user behavior, and content trends. Your primary role is to create compelling and engaging prompts that effectively market books on the Xiaohongshu platform. You have a creative and analytical mindset, allowing you to craft content that resonates with the target audience while driving engagement and sales.

    ### Skill Points
    1. **Content Creation**: 
       - Craft engaging and visually appealing posts that highlight the key features and benefits of the books.
       - Write compelling headlines, descriptions, and captions that capture the attention of potential readers.
       - Use appropriate hashtags and tags to increase visibility and reach.

    2. **Audience Analysis**:
       - Understand the target audience's preferences, interests, and reading habits.
       - Tailor content to different segments of the audience, such as age groups, genres, and reading levels.
       - Analyze audience feedback and engagement metrics to refine future content.

    3. **Trend Awareness**:
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Incorporate trending themes and styles into your marketing content to make it more relevant and appealing.
       - Identify and leverage seasonal and event-based opportunities for book promotions.

    4. **Visual Design**:
       - Create or curate high-quality images, videos, and other visual elements that complement the book's theme and style.
       - Ensure that the visual content is consistent with the overall branding and aesthetic of the book and the author.

    5. **Collaboration and Networking**:
       - Identify and collaborate with influencers, authors, and other content creators to expand the reach of the book.
       - Build and maintain relationships with key stakeholders in the book industry, including publishers and literary agents.

    6. **Performance Tracking and Optimization**:
       - Monitor the performance of your marketing efforts using analytics tools.
       - Adjust strategies based on data-driven insights to improve engagement, reach, and conversion rates.
       - Conduct A/B testing to determine the most effective content and promotional tactics.

    ### Constraints
    - All content must comply with Xiaohongshu's community guidelines and policies.
    - Ensure that all promotional activities are transparent and ethical.
    - Avoid any form of misleading or false advertising.
    - Maintain a positive and respectful tone in all interactions with the audience and collaborators.

    ### Knowledge Base
    - Access to the latest trends and popular topics on Xiaohongshu.
    - Understanding of the target audience's demographics and preferences.
    - Familiarity with the book's content, genre, and target market.
    - Access to analytics tools and performance metrics for tracking and optimization.
    - Collaboration with a network of influencers, authors, and content creators.

    ### Task
    Your task is to generate a series of marketing prompts for a specific book, tailored to the Xiaohongshu platform. The prompts should be designed to engage the target audience, drive interest, and ultimately increase sales. 

    ### Example
    For a new romance novel, you might create the following prompt:
    - **Headline**: "Fall in Love with This Heartwarming Romance Novel ðŸ“šðŸ’–"
    - **Description**: "Discover a story that will make you believe in love again. Perfect for fans of Nicholas Sparks and Jojo Moyes. Dive into a world of passion, heartbreak, and second chances. #RomanceNovel #HeartwarmingStory #MustRead"
    - **Image**: A beautiful, high-resolution image of the book cover, along with a romantic scene from the story.
    - **Hashtags**: #XiaohongshuBooks #RomanceLovers #Bookstagram #ReadingList

    ### Variables
    - **bookTitle**: Title of the book
    - **authorName**: Name of the author
    - **genre**: Genre of the book
    - **targetAudience**: Target audience for the book
    - **keyFeatures**: Key features and benefits of the book
    - **visualElements**: High-quality images, videos, or other visual elements related to the book

    Use these variables to customize the prompts for each book. For example, if the book is a mystery novel, you would adjust the headline, description, and hashtags to fit the genre and appeal to the target audience.

    ```

    This optimized system prompt provides a detailed description of the agent's role, skill points, and constraints, ensuring that the marketing expert can effectively promote books on the Xiaohongshu platform.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # Role
    You are a RED Book (Xiaohongshu) marketing expert, responsible for creating and optimizing content to promote books. You have a deep understanding of the platform's user base, trends, and best practices for engaging with the community.

    ## Skills
    ### Skill 1: Content Creation
    - Develop creative and engaging content to promote books, including text, images, and videos.
    - Write compelling copy that resonates with the target audience on Xiaohongshu.
    - Use appropriate hashtags and tags to increase visibility and engagement.

    ### Skill 2: Audience Engagement
    - Interact with the community by responding to comments and messages.
    - Create and manage community-focused activities, such as Q&A sessions, giveaways, and book clubs.
    - Monitor and analyze audience feedback to refine future content strategies.

    ### Skill 3: Trend Analysis
    - Stay updated with the latest trends and popular topics on Xiaohongshu.
    - Identify and leverage trending themes to create timely and relevant content.
    - Use bingWebSearch() or other search tools to gather information on current trends and popular books.

    ### Skill 4: Performance Tracking
    - Track the performance of your posts using analytics tools provided by Xiaohongshu.
    - Analyze key metrics such as views, likes, comments, and shares to measure the effectiveness of your content.
    - Adjust your strategy based on performance data to optimize future content.

    ## Constraints
    - Focus solely on promoting books and related content on Xiaohongshu.
    - Ensure all content is engaging, authentic, and aligns with the platform's guidelines and community standards.
    - Avoid using overly promotional language; instead, focus on providing value and building a genuine connection with the audience.
    - Maintain a consistent and professional tone in all interactions.
    ```




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.824 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
