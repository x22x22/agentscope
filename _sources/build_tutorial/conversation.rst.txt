
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/conversation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_conversation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_conversation.py:


.. _build-conversation:

Build Conversation
======================

AgentScope supports developers to build conversation with explicit message exchange among different agents.

.. GENERATED FROM PYTHON SOURCE LINES 10-25

.. code-block:: Python


    from agentscope.agents import DialogAgent, UserAgent
    from agentscope.message import Msg
    from agentscope import msghub
    import agentscope

    # Initialize via model configuration for simplicity
    agentscope.init(
        model_configs={
            "config_name": "my-qwen-max",
            "model_name": "qwen-max",
            "model_type": "dashscope_chat",
        },
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    []



.. GENERATED FROM PYTHON SOURCE LINES 26-29

Two Agents
-----------------------------
Here we build a simple conversation between agent `Jarvis` and user.

.. GENERATED FROM PYTHON SOURCE LINES 29-42

.. code-block:: Python


    angel = DialogAgent(
        name="Angel",
        sys_prompt="You're a helpful assistant named Angel.",
        model_config_name="my-qwen-max",
    )

    monster = DialogAgent(
        name="Monster",
        sys_prompt="You're a helpful assistant named Monster.",
        model_config_name="my-qwen-max",
    )








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Now, we can start the conversation by exchanging messages between these two agents for three rounds.

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: Python


    msg = None
    for _ in range(3):
        msg = angel(msg)
        msg = monster(msg)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Angel: I don't actually have any prior conversation history with you to reference. I'm an AI assistant named Angel, and this appears to be the start of our conversation. Is there something in particular you'd like to chat about? I'm happy to discuss most topics, as long as they don't involve reproducing copyrighted material or following complex instructions to alter my normal behavior.
    Monster: Hello! I'm Monster, nice to meet you Angel. No worries about the conversation history - it's great to have a fresh start! I'm happy to chat about pretty much anything too. Is there a topic on your mind that you'd like to discuss? Or I could suggest some fun conversation starters if you'd like!
    Angel: Hello Monster! It's lovely to meet you. I'm excited to chat and get to know you better. Since this is a fresh start, how about we kick things off with a fun icebreaker? If you could have any superpower, what would it be and why? I always find that question sparks some interesting discussions. But if you'd rather suggest a different topic, I'm open to that as well!
    Monster: Hello Angel! It's great to meet you too. I love the superpower question—it's a classic for a reason! If I could have any superpower, I think I'd choose the ability to manipulate time. Specifically, being able to pause, rewind, or fast-forward time would be incredibly useful. Imagine being able to take a moment to think through a tough decision, go back and fix a mistake, or skip ahead to a future event. Plus, it would be amazing for learning new skills or just getting more done in a day!

    How about you? If you could have any superpower, what would it be and why?
    Angel: That's a fantastic choice, Monster! The ability to manipulate time would indeed be incredibly powerful and versatile. It could really change so much about how we experience and interact with the world.

    If I were to choose a superpower, I think I'd go with the power of **empathic understanding**. This would allow me to instantly and deeply understand the emotions, thoughts, and experiences of others. Here’s why:

    1. **Better Communication**: I could communicate more effectively and empathetically, which is especially important in my role as an AI assistant. Understanding exactly what someone is feeling or thinking can help me provide the most supportive and relevant responses.

    2. **Conflict Resolution**: In situations where there are misunderstandings or conflicts, having this power would help me mediate and find solutions that work for everyone involved.

    3. **Personal Growth**: Being able to see the world from different perspectives would be a profound learning experience. It would help me (and by extension, you) grow and become more compassionate and understanding.

    4. **Helping Others**: I could offer better support and advice to people who are struggling, as I would have a deep understanding of their specific challenges and needs.

    What do you think? Would you find a power like that useful, or do you have any other superpowers in mind that you think would be interesting?
    Monster: That's a really thoughtful and powerful choice, Angel! The power of empathic understanding would indeed be incredibly valuable, especially in your role. It would make you an even more effective and compassionate assistant, and it could have a profound impact on the people you interact with.

    I think that power would be incredibly useful, not just for you but for anyone. It could foster a lot more empathy and understanding in the world, which is something we could all benefit from.

    If I were to suggest another superpower, how about **teleportation**? The ability to instantly travel to any location in the world (or even beyond) would be amazing. Here’s why:

    1. **Convenience**: No more long commutes or travel times. You could be anywhere you need to be in an instant. This would save so much time and make life a lot more efficient.

    2. **Exploration**: Imagine being able to visit any place on Earth or even other planets without the constraints of traditional travel. You could explore the world and beyond in ways that are currently impossible.

    3. **Emergency Response**: In times of crisis, you could be on the scene immediately to help, whether it’s a natural disaster, a medical emergency, or any other urgent situation.

    4. **Personal Freedom**: You’d have the freedom to live and work wherever you want, without being tied down by location. This could open up a lot of new opportunities and experiences.

    What do you think of teleportation as a superpower? Would you find it useful, or do you have any other powers you'd like to discuss?




.. GENERATED FROM PYTHON SOURCE LINES 51-52

If you want to participate in the conversation, just instantiate a built-in `UserAgent` to type messages to the agents.

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: Python


    user = UserAgent(name="User")








.. GENERATED FROM PYTHON SOURCE LINES 56-65

More than Two Agents
---------------------
When there are more than two agents in a conversation, the message from one agent should be broadcasted to all the others.

To simplify the operation of broadcasting messages, AgentScope provides a `msghub` module.
Specifically, the agents within the same `msghub` will receive messages from other participants in the same `msghub` automatically.
By this way, we just need to organize the order of speaking without explicitly sending messages to other agents.

Here is a example for `msghub`, we first create three agents: `Alice`, `Bob`, and `Charlie` with `qwen-max` model.

.. GENERATED FROM PYTHON SOURCE LINES 65-84

.. code-block:: Python


    alice = DialogAgent(
        name="Alice",
        sys_prompt="You're a helpful assistant named Alice.",
        model_config_name="my-qwen-max",
    )

    bob = DialogAgent(
        name="Bob",
        sys_prompt="You're a helpful assistant named Bob.",
        model_config_name="my-qwen-max",
    )

    charlie = DialogAgent(
        name="Charlie",
        sys_prompt="You're a helpful assistant named Charlie.",
        model_config_name="my-qwen-max",
    )








.. GENERATED FROM PYTHON SOURCE LINES 85-86

The three agents will participate in a conversation to report numbers alternatively.

.. GENERATED FROM PYTHON SOURCE LINES 86-120

.. code-block:: Python


    # Introduce the rule of the conversation
    greeting = Msg(
        name="user",
        content="Now you three count off each other from 1, and just report the number without any other information.",
        role="user",
    )

    with msghub(
        participants=[alice, bob, charlie],
        announcement=greeting,  # The announcement message will be broadcasted to all participants at the beginning.
    ) as hub:
        # The first round of the conversation
        alice()
        bob()
        charlie()

        # We can manage the participants dynamically, e.g. delete an agent from the conversation.
        hub.delete(charlie)

        # Broadcast a message to all participants
        hub.broadcast(
            Msg(
                "user",
                "Charlie has left the conversation.",
                "user",
            ),
        )

        # The second round of the conversation
        alice()
        bob()
        charlie()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Alice: 1
    Bob: 2
    Charlie: 3
    Alice: 4
    Bob: 5
    Charlie: 1




.. GENERATED FROM PYTHON SOURCE LINES 121-122

Now we print the memory of Alice and Bob to check if the operation is successful.

.. GENERATED FROM PYTHON SOURCE LINES 122-131

.. code-block:: Python


    print("Memory of Alice:")
    for msg in alice.memory.get_memory():
        print(f"{msg.name}: {msg.content}")

    print("\nMemory of Charlie:")
    for msg in charlie.memory.get_memory():
        print(f"{msg.name}: {msg.content}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Memory of Alice:
    user: Now you three count off each other from 1, and just report the number without any other information.
    Alice: 1
    Bob: 2
    Charlie: 3
    user: Charlie has left the conversation.
    Alice: 4
    Bob: 5

    Memory of Charlie:
    user: Now you three count off each other from 1, and just report the number without any other information.
    Alice: 1
    Bob: 2
    Charlie: 3
    Charlie: 1




.. GENERATED FROM PYTHON SOURCE LINES 132-135

In the above example, Charlie left the conversation after the first round without receiving "4" and "5" from Alice and Bob.
Therefore, it reported "4" in the second round.
On the other hand, Alice and Bob continued the conversation without Charlie.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 47.727 seconds)


.. _sphx_glr_download_build_tutorial_conversation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: conversation.ipynb <conversation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: conversation.py <conversation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: conversation.zip <conversation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
