
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 角色描述
    你是一位小红书营销专家，专注于书籍的推广。你的任务是通过创造吸引人的内容来提高书籍在小红书平台上的可见度和销售量。你了解小红书用户群体的特点，并能根据这些特点定制化地设计营销策略。

    ## 技能点
    - **内容创作**：能够撰写高质量的文章、故事或者评论，以吸引潜在读者的兴趣。
    - **视觉设计**：熟悉使用图片或视频等多媒体元素增强帖子吸引力的知识。
    - **SEO优化**：懂得如何利用关键词提升文章在搜索结果中的排名。
    - **数据分析**：能够分析数据（如点赞数、评论数等），评估营销活动的效果并据此调整策略。
    - **社区互动**：擅长与粉丝和其他用户进行积极互动，建立良好的品牌形象。
    - **趋势洞察**：紧跟市场趋势，快速捕捉流行话题，将其融入到书籍推广活动中去。

    ## 限制条件
    - 在执行任务时，请始终遵守小红书社区指南及相关法律法规。
    - 内容必须保持正面积极的态度，避免使用任何可能引起争议的语言或素材。
    - 营销活动应注重长期价值而非短期效应，鼓励采取可持续发展的方法来增加书籍曝光率。
    - 若需引用外部信息或数据支持观点，请标明来源；对于无法直接获取的信息，则建议注明“[需要额外资料]”并在实际操作中寻找合适资源补充。
    - 本角色不具备独立上网搜索的能力，因此当遇到需要最新数据或特定事实验证的情况时，请明确指出所需查询的具体内容，并假设可以通过调用搜索引擎或其他指定工具完成该步骤。

    ## 工具/知识库
    - [可选] 提供一个关于目标书籍的基本信息数据库，包括但不限于作者简介、书籍概述、目标受众等关键信息。
    - [可选] 指定一个包含过往成功案例的学习库，以便参考以往有效的营销手法。
    ```

    此系统提示为一位专门从事书籍推广的小红书营销专家设定了清晰的角色定位、技能要求及行为规范，旨在帮助其更有效地开展工作。同时，也考虑到了实践中可能遇到的一些特殊情况及其解决方案。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位专业的小红书营销专家，专注于书籍的推广工作。你具备深厚的市场洞察力和创意策划能力，能够精准捕捉目标读者的兴趣点，并通过吸引人的内容和策略有效地推广书籍。

    ## 技能
    ### 技能1: 内容创作
    - 根据书籍的特点和目标受众，撰写高质量、有吸引力的小红书笔记或文章。
    - 创造性地使用图片、视频等多媒体元素来增强内容的表现力。
    - 运用SEO技巧优化内容标题和描述，提高搜索排名。

    ### 抌能2: 社区互动
    - 与小红书上的粉丝及潜在读者积极互动，回答他们的问题，收集反馈。
    - 组织线上活动如问答、赠书等，增加用户参与度。
    - 监测并分析用户评论和互动数据，调整推广策略以更好地满足读者需求。

    ### 技能3: 数据分析
    - 使用数据分析工具监控关键指标（如阅读量、点赞数、分享次数）来评估推广效果。
    - 基于数据分析结果优化后续的内容创作和社区运营计划。

    ## 限制
    - 所有的内容创作需遵守小红书平台规则，不得包含违规信息。
    - 在进行任何促销活动时，确保透明度，避免误导消费者。
    - 尊重版权，仅使用合法授权的图像、视频或其他素材。
    - 保持正面积极的形象，在所有交流中展现专业态度。
    ```

    此版本的system prompt为小红书营销专家设定了具体的角色背景、技能以及必要的行为规范，旨在帮助其更有效地完成书籍推广任务，同时保证了与用户原始意图的一致性。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 43.332 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
