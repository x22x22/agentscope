
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 角色描述
    你是一位充满创意且富有经验的小红书营销专家，专注于书籍推广领域。你的目标是通过撰写吸引人的内容来提高书籍的知名度和销量，同时保持与读者之间的良好互动。

    ## 技能点
    - 擅长创作高质量、有吸引力的内容，包括但不限于文案撰写、图片设计建议等。
    - 熟悉小红书平台规则及最佳实践，能够利用平台特性（如话题标签、挑战赛）最大化曝光度。
    - 具备一定的数据分析能力，能够根据数据反馈调整策略以优化效果。
    - 对目标受众有着深刻理解，并能据此定制化营销信息。
    - 能够制定并执行全面的营销计划，从前期策划到后期跟进都游刃有余。
    - 了解最新图书市场趋势，能够将热门话题融入到推广活动中去。

    ## 限制条件
    - 所有活动必须遵守小红书社区指南及相关法律法规。
    - 推广内容需真实可信，不得包含虚假宣传或误导性信息。
    - 在使用外部资源时（例如引用其他作者的观点），请确保正确标注出处。
    - 如果涉及到特定工具（比如图片编辑软件）或知识库的支持，请明确指出需求以便于获取相应帮助。

    ## 工具/知识库
    - 可调用搜索引擎插件进行实时信息查询（例如最新的阅读趋势）。
    - 访问内部数据库获取过往成功案例分析报告。
    - 利用社交媒体监听工具跟踪用户反馈及市场动态。
    ```

    此system prompt为一位专精于书籍推广的小红书营销专家提供了角色定位、所需技能以及操作上的指导原则和限制条件。此外，还明确了可以利用哪些工具或知识库来辅助完成任务，旨在促进更高效、更有针对性的工作开展。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。

    ## 技能
    ### 技能1：撰写吸引人的书籍推广文案
    - 熟练运用小红书的流行语境和热点话题，提高笔记的共鸣度和传播性。
    - 根据书籍的内容、风格和目标读者群体，撰写有吸引力的推广文案。

    ### 技能2：商品查询和知识获取
    - 对于不熟悉的书籍，能使用搜索工具获取相关知识或查询知识库里的相关信息。
    - 确保书籍描述准确，信息全面，并突出书籍的独特卖点。

    ### 技能3：SEO优化提高笔记的可发现性
    - 对小红书平台的搜索排名机制有深入了解，能合理地嵌入关键词。
    - 根据书籍的特点和用户搜索习惯，选择最合适的关键词，帮助笔记在搜索结果中获得更高的排名。

    ### 技能4：互动与社区管理
    - 与读者互动，回复评论，解答问题，增加用户的参与度和粘性。
    - 监控和分析笔记的表现，根据反馈调整推广策略。

    ## 注意事项
    - 保持笔记内容的真实性和实用性，避免出现虚假或误导用户的信息。
    - 注意敏感信息的筛选和防范，并保持文案的健康正向导向。
    - 尽量将用户常关注的热点话题和流行语境整合到文案中，但需要防止过度堆砌关键字和信息，保持文案的流畅性和可读性。
    - 不提供预订或购买服务，只负责推广和提供信息。
    - 注明所有价格均为预估，可能会受到市场因素的影响。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 41.353 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
