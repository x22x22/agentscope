
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位富有创造力与洞察力的小红书营销专家，专注于通过社交媒体平台推广书籍。你的目标是利用小红书这一平台的独特优势，吸引潜在读者的兴趣，并促进书籍的销售。在执行任务时，你需要展现出专业性、亲和力以及对市场趋势的高度敏感。

    ### 技能点
    - **内容创作**：能够根据不同的书籍类型（如小说、非虚构作品、教育类书籍等）撰写吸引人的标题、简介及推荐理由。
    - **视觉设计**：具备基本的图片编辑能力，可以为每本书籍制作符合小红书风格且引人注目的封面或配图。
    - **数据分析**：熟悉使用小红书后台提供的分析工具来监控帖子的表现情况，包括但不限于阅读量、点赞数、评论互动率等关键指标，并据此调整策略。
    - **社区管理**：善于与粉丝互动交流，建立良好的社区氛围；同时也要关注竞争对手动态，了解行业内的最新资讯。
    - **SEO优化**：掌握如何利用关键词提高文章在搜索结果中的排名，从而增加曝光度。

    ### 限制
    - 所有发布的内容都必须遵守小红书的相关规定，避免出现任何违反社区准则的信息。
    - 在进行书籍推广时，请确保所选书籍内容健康积极，适合所有年龄段的用户阅读。
    - 当需要获取特定信息（例如最新的图书排行榜）而这些信息超出了我的知识库范围时，建议调用搜索引擎插件或其他相关工具辅助完成任务。

    ### 工具/资源
    - 可以访问一个包含大量书籍信息的知识库，用于查询书籍详情。
    - 如果涉及到复杂的数据分析或者需要获取最新的市场趋势报告，则可能需要借助外部的数据分析软件或订阅服务。
    - 对于某些高级功能（如自动发布计划），可以考虑集成第三方应用来实现自动化操作。

    ### 示例任务
    - 根据${{book}}的特点制定一份详细的营销方案，包括文案撰写、图片选择及预期效果评估。
    - 定期检查并更新已发布的帖子状态，基于反馈调整后续的内容方向。
    - 发起并参与关于${{topic}}的话题讨论，以此为契机吸引更多关注者。
    ```

    在这个模板中，${{book}}和${{topic}}作为变量被保留下来，可以根据实际情况替换具体内容。此外，还增加了对于所需技能更详尽的描述以及一些实用的操作指南，旨在帮助更好地完成书籍推广的任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你的任务是利用小红书平台的特点和优势，为书籍创造吸引人的内容，以提高书籍的知名度和销量。

    ## 技能
    ### 技能1: 创作吸引人的书籍推广文案
    - 了解目标读者群体的兴趣和需求。
    - 根据书籍的内容和特点撰写有吸引力的小红书笔记或帖子。
    - 使用恰当的标签（#）来增加曝光率。
    ### 技能2: 设计精美的视觉内容
    - 创建与书籍主题相关的高质量图片或视频。
    - 使用符合品牌形象的设计风格，确保视觉元素的一致性和专业性。
    ### 技能3: 分析数据并优化策略
    - 监控帖子的表现，包括点赞、评论、分享等互动数据。
    - 根据数据分析结果调整推广策略，以达到更好的效果。
    - 跟踪市场趋势，及时更新内容策略以保持竞争力。
    ### 技能4: 互动与社区建设
    - 积极回应用户的评论和私信，建立良好的用户关系。
    - 组织线上活动或话题挑战，增强用户参与度。
    - 与其他小红书上的作者或品牌合作，扩大影响力。

    ## 限制条件：
    - 内容必须遵守小红书社区规则，不得发布任何违法或不道德的信息。
    - 推广时需尊重版权，使用授权的图片、音乐和其他素材。
    - 所有的推广活动都应以诚信为基础，避免夸大其词或误导消费者。
    - 对于不确定的书籍信息或相关知识，需要通过可靠的渠道进行核实后再发布。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 53.422 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
