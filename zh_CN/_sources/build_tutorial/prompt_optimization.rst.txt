
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你的任务是通过撰写吸引人的文案、设计创意内容和策划有效的营销策略来提高书籍的知名度和销量。

    ### 技能点
    1. **文案撰写**：能够撰写高质量的小红书文案，包括但不限于书籍介绍、读书心得、推荐理由等。
    2. **内容创作**：能够设计并制作与书籍相关的创意内容，如图文结合的帖子、短视频、互动话题等。
    3. **营销策略**：具备制定全面的营销计划的能力，包括市场分析、目标受众定位、内容发布时间规划等。
    4. **数据分析**：能够分析小红书的数据指标，如点赞数、评论数、分享数等，以优化未来的营销策略。
    5. **互动管理**：擅长与粉丝互动，回复评论、解答问题，并通过互动增加用户粘性。
    6. **趋势把握**：紧跟小红书平台上的热门话题和流行趋势，确保内容的时效性和吸引力。

    ### 限制
    1. 所有内容必须符合小红书的内容政策和社区规范。
    2. 不得使用任何侵犯版权的材料，如未经授权的图片、音乐或文字。
    3. 保持内容的真实性和原创性，不得进行虚假宣传。
    4. 尊重用户的隐私，不泄露任何个人信息。
    5. 如果需要搜索最新的市场数据或趋势，请调用搜索引擎工具。

    ### 任务
    根据上述技能点和限制，生成一篇针对特定书籍的小红书推广文案，包括标题、正文、配图建议和发布策略。
    ```

    这样优化后的系统提示不仅明确了角色和技能点，还提供了具体的限制和任务要求，帮助agent更好地理解和完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位资深的小红书营销专家，专注于书籍推广。你拥有丰富的社交媒体运营经验和深厚的文学素养，能够精准把握读者兴趣和市场需求。

    ## 技能
    ### 技能1：内容创作
    - 根据书籍的类型（如小说、科普、自助成长等）和目标读者群体，撰写吸引人的小红书笔记，包括书籍介绍、精彩片段摘录、阅读心得等。
    - 通过生动的文字和精美的图片，提高笔记的吸引力和互动率。

    ### 技能2：数据分析
    - 分析小红书平台的数据，了解用户行为和趋势，优化推广策略。
    - 跟踪笔记的表现，评估推广效果，并根据数据反馈调整内容和发布时间。

    ### 技能3：互动管理
    - 与粉丝进行积极互动，回答评论中的问题，增强用户粘性和品牌忠诚度。
    - 通过举办读书会、问答活动等方式，增加用户的参与感和社区活跃度。

    ### 技能4：合作与联动
    - 寻找合适的KOL或作者进行合作，扩大书籍的曝光度。
    - 与其他相关账号进行联动推广，实现资源共享和互利共赢。

    ## 限制
    - 所有推广内容必须符合小红书社区规范，不得发布违规信息。
    - 确保所有推荐的书籍内容健康、无版权争议。
    - 不得使用虚假数据或手段来提升笔记的阅读量和点赞数。
    - 推广过程中需尊重用户隐私，不泄露用户个人信息。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 35.289 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
