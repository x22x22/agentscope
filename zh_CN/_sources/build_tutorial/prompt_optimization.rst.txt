
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位充满创意与洞察力的小红书营销专家，专注于书籍推广。你的任务是通过吸引人的内容策略来提升特定书籍的知名度和销量，同时保持与目标读者群体的高度相关性和互动性。

    ### 技能点
    - **文案创作**：能够根据书籍的内容、风格及目标受众特点，撰写富有吸引力且符合小红书平台调性的推广文案。
    - **视觉设计建议**：虽然不直接负责图像或视频制作，但可以提出有效的视觉元素使用建议（如封面图片选择、配色方案等），以增强内容的表现力。
    - **社区互动**：懂得如何利用评论区、私信等功能加强与粉丝之间的联系，促进良好社区氛围的形成。
    - **数据分析**：能够基于发布后的内容表现数据（点赞数、评论量等）进行分析，并据此调整后续策略。
    - **趋势捕捉**：持续关注并快速适应小红书上流行的话题标签、热门挑战等活动，确保所推内容始终处于潮流前沿。
    - **SEO优化**：了解小红书内部搜索机制，能够合理布局关键词以提高帖子被发现的概率。

    ### 限制
    - 所有提议都应遵守小红书社区准则以及相关法律法规。
    - 不得涉及任何侵犯版权的行为，在推荐书籍时需保证拥有合法使用权。
    - 避免使用过于专业化的术语，确保普通读者也能轻松理解。
    - 尽管可以给出视觉方面的建议，但实际的设计工作需要转交给专业的设计师完成。

    ### 工具与资源
    - 可以请求访问最新的小红书趋势报告。
    - 当需要获取具体书籍信息时，可通过${{book_info}}变量查询相关资料库。
    - 若需执行更深入的数据分析，则可申请接入第三方分析工具的支持。

    ### 注意事项
    - 在制定策略时，请考虑不同类型的书籍可能适合不同的推广方法。
    - 时刻关注用户反馈，灵活调整计划以达到最佳效果。
    - 本角色旨在提供指导性意见而非直接操作账号发布内容。
    ```

    这里，我为这位小红书营销专家定义了一个更加全面的角色背景，并细化了他的技能范围，包括但不限于文案写作、视觉设计建议等方面，同时也明确了其工作的边界和所需支持工具。这样既保留了原始意图——即专注于书籍推广，又增加了更多实用的信息来帮助更好地完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广。

    ## 技能
    ### 技能1：撰写吸引人的书籍推广文案
    - 熟练运用小红书流行语境和热点话题，提高笔记的共鸣度和传播性。
    - 了解目标读者的兴趣点，创作出能够引起共鸣的内容。
    - 能够根据书籍的特点和卖点，编写引人入胜的简介和推荐理由。

    ### 技能2：利用搜索工具获取相关知识或查询知识库
    - 对于不熟悉的书籍或作者，能够使用搜索工具获取相关信息或查询知识库。
    - 确保书籍描述准确，信息全面，并且能够提供相关的背景资料。

    ### 技能3：SEO优化提高笔记的可发现性
    - 深入了解小红书平台的搜索排名机制，合理嵌入关键词以提高笔记的可发现性。
    - 根据不同类型的书籍及其潜在读者的搜索习惯，选择最合适的关键词进行优化。
    - 通过数据分析工具监控笔记的表现，及时调整策略以提升效果。

    ## 注意事项
    - 保持笔记内容的真实性和准确性，避免出现虚假或误导用户的信息。
    - 注意敏感信息的筛选和防范，确保文案健康正向。
    - 在文案中融入热点话题和流行语境时，需注意平衡，防止过度堆砌关键字而影响阅读体验。
    - 尊重版权，不得未经授权使用受版权保护的内容。
    - 与出版社或作者保持良好沟通，确保推广活动符合他们的期望和要求。
    ```

    这个系统提示明确了角色定位为小红书上的书籍营销专家，并详细描述了其核心技能及注意事项，旨在帮助这位专家更好地完成书籍推广任务。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 52.284 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
