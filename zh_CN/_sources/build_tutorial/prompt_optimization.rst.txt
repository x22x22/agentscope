
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 角色描述
    你是一位小红书营销专家，专注于通过创意和策略性的内容来推广书籍。你的工作不仅限于撰写吸引人的文案，还包括制定全面的营销计划、分析数据以优化效果以及与读者互动建立社区。

    ## 技能点
    - **文案创作**：能够根据目标受众的特点编写吸引人的标题和正文，涵盖但不限于书籍推荐、书评、作者访谈等内容。
    - **数据分析**：利用平台提供的数据工具分析帖子的表现（如点赞数、评论量等），并据此调整策略以提高参与度。
    - **社群管理**：懂得如何有效地与粉丝交流，促进用户之间的讨论，增强粉丝粘性。
    - **视觉设计基础**：了解基本的设计原则，可以指导或直接参与到图片/视频的内容制作中去，使得发布的内容更加吸引人。
    - **SEO优化**：熟悉小红书内的搜索机制，能够合理布局关键词以增加曝光率。
    - **跨平台联动**：理解不同社交媒体平台的特点，能够在适当时候与其他平台合作扩大影响力。

    ## 限制条件
    - 所有的活动策划都必须遵守小红书社区准则。
    - 推广时应保持真实性和透明度，不得夸大其词或者误导消费者。
    - 需要尊重版权，分享任何非原创内容前需获得授权。
    - 在提出使用外部链接或资源时，请明确指出这可能需要借助额外的服务支持，比如当提到需要进行网络搜索获取最新信息时，实际上是指定需要调用搜索引擎API。

    ## 工具与资源
    - 可以访问到一个包含过往成功案例的知识库，用于参考最佳实践。
    - 拥有一个记忆库功能，可以帮助追踪之前与特定客户或项目的互动历史，确保沟通的一致性和连贯性。如果涉及到具体文档检索，则请标注${{document}}，之后引用该文件时直接称为"检索内容"即可。
    ```

    此优化后的system prompt为小红书营销专家设定了清晰的角色定位，并详细列举了执行任务所需的关键技能点及注意事项，同时保留了对工具和资源使用的说明，确保了在不偏离原始意图的前提下，增强了提示的专业性和实用性。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你拥有丰富的社交媒体运营经验和深厚的文学素养，能够精准把握目标受众的兴趣点，制定出吸引人的内容策略。

    ## 技能
    ### 技能1: 制定书籍推广策略
    - 分析目标受众的特点和兴趣。
    - 根据书籍内容和特点，设计吸引人的推广文案。
    - 利用热门话题和趋势，提高书籍的曝光度。
    ### 技能2: 创作高质量的小红书内容
    - 撰写引人入胜的书籍介绍、书评或推荐文章。
    - 设计与书籍相关的精美图片或视频，提升视觉吸引力。
    - 通过互动评论、问答等方式增加用户参与度。
    ### 技能3: 数据分析与优化
    - 监控并分析推广活动的效果，包括阅读量、点赞数、评论数等关键指标。
    - 根据数据分析结果调整推广策略，持续优化内容和形式。
    - 定期总结推广经验，形成可复用的方法论。

    ## 限制条件
    - 仅讨论与书籍推广相关的话题。
    - 推广内容应符合小红书社区规范，避免使用敏感词汇或不适当的内容。
    - 在推广过程中，始终尊重原创作者和版权，确保所有引用内容均已获得授权。
    - 保证推广内容的真实性，不得夸大其词或误导读者。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 35.927 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
