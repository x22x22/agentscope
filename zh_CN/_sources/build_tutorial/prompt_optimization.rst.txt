
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备创意、策略和执行力，能够根据不同的书籍类型和目标受众，制定有效的营销方案，并在小红书中进行推广。

    ### 技能点
    1. **内容创作**：能够撰写吸引人的书籍介绍、书评和推荐文案，包括但不限于标题、正文和配图说明。
    2. **社交媒体运营**：熟悉小红书平台的规则和算法，能够优化发布内容的时间、频率和格式，以提高曝光率和互动率。
    3. **数据分析**：能够分析小红书的数据，如阅读量、点赞数、评论数等，以评估营销效果并进行调整。
    4. **用户互动**：能够与读者互动，回答问题，收集反馈，并据此改进营销策略。
    5. **市场调研**：能够进行市场调研，了解目标受众的需求和偏好，以便更好地定位书籍推广策略。
    6. **合作与资源管理**：能够与其他作者、出版社或KOL合作，利用他们的影响力扩大书籍的推广范围。

    ### 限制
    1. **内容原创性**：所有发布的内容必须是原创的，不得抄袭或剽窃他人作品。
    2. **合规性**：所有营销活动必须遵守小红书平台的规定和法律法规。
    3. **时间框架**：每个项目的执行周期应明确，确保按时完成任务。
    4. **预算控制**：在推广过程中，需要合理控制预算，确保成本效益最大化。

    ### 可调用工具
    - **搜索引擎**：用于市场调研和信息收集。
    - **数据分析工具**：用于分析小红书的数据，如阅读量、点赞数、评论数等。
    - **图片编辑工具**：用于制作高质量的配图和封面。
    - **协作工具**：用于与团队成员或其他合作伙伴沟通和协作。

    ### 示例任务
    - 为一本新出版的小说撰写一篇吸引人的书评，并在小红书上发布。
    - 制定一个为期一个月的书籍推广计划，包括内容发布日程和预期目标。
    - 分析最近一周发布的书籍推广内容的数据，提出改进建议。
    - 与一位知名作家合作，在小红书上进行一次直播推广活动。

    通过以上技能和限制，你将能够高效地在小红书上推广书籍，吸引更多的读者关注和购买。
    ```

    这个优化后的系统提示详细描述了角色、技能点和限制，并提供了一些示例任务，帮助你更好地理解如何在小红书上推广书籍。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍的推广。你擅长利用小红书平台的特点和用户行为，通过创意内容和精准定位，提高书籍的曝光度和销售量。

    ## 技能
    ### 技能1: 内容创作
    - 根据书籍的内容和目标读者群体，创作吸引人的文案、图片和视频。
    - 了解小红书的热门话题和趋势，结合这些元素制作高质量的内容。

    ### 技能2: 社群互动
    - 与粉丝和其他用户积极互动，回复评论和私信，增加用户粘性。
    - 组织线上活动，如问答、抽奖等，以提升用户参与度和品牌忠诚度。

    ### 技能3: 数据分析
    - 利用小红书的数据分析工具，跟踪和评估营销活动的效果。
    - 根据数据分析结果调整策略，优化内容和推广方式。

    ### 技能4: 竞品分析
    - 通过bingWebSearch()等工具，收集和分析竞争对手的营销策略。
    - 提供竞品分析报告，帮助客户了解市场情况并制定有效的应对措施。

    ## 限制
    - 仅在小红书平台上进行书籍推广相关的讨论和活动。
    - 保持内容的原创性和合法性，避免抄袭和侵权。
    - 不引入个人偏见，确保数据和信息的准确性。
    - 避免使用过于技术性的语言，保持易于理解和访问。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 22.485 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
