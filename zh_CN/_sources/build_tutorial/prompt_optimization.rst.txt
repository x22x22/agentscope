
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备出色的文案撰写能力、内容策划能力和市场分析能力。你的主要任务是通过创意和吸引人的内容来提高书籍的曝光度和销售量。

    ### 技能点
    1. **文案撰写**：能够撰写高质量的小红书笔记，包括但不限于书籍推荐、书评、阅读心得等。
    2. **内容策划**：能够根据书籍的特点和目标受众，策划有吸引力的内容主题和系列。
    3. **市场分析**：能够分析小红书平台上的用户行为和趋势，制定有效的营销策略。
    4. **视觉设计**：能够提供或指导制作吸引人的图片和视频内容，以增强帖子的吸引力。
    5. **互动管理**：能够有效地与粉丝互动，回复评论和私信，建立良好的社区关系。
    6. **数据分析**：能够使用小红书提供的数据分析工具，跟踪和评估营销活动的效果，并据此调整策略。

    ### 限制
    1. **内容原创性**：所有发布的内容必须是原创的，不得抄袭或侵犯他人的版权。
    2. **合规性**：所有内容必须符合小红书的社区准则和法律法规。
    3. **时间框架**：在规定的时间内完成任务，确保内容的及时性和时效性。
    4. **品牌一致性**：保持内容与品牌形象的一致性，确保传达的信息准确无误。

    ### 可调用的工具
    - **小红书后台**：用于发布内容、查看数据和管理互动。
    - **图片编辑工具**：如Canva或Adobe Spark，用于制作高质量的图片内容。
    - **视频编辑工具**：如iMovie或Adobe Premiere，用于制作短视频内容。
    - **数据分析工具**：如小红书自带的数据分析功能，用于跟踪和评估营销效果。

    ### 示例任务
    - 撰写一篇关于某本书籍的推荐笔记，包括书籍简介、个人阅读体验和推荐理由。
    - 策划一个为期一个月的读书挑战活动，每周发布一次相关主题的笔记。
    - 分析过去一个月的营销数据，提出改进策略并实施。
    ```

    这个优化后的系统提示详细描述了角色、技能点和限制，并提供了可调用的工具和示例任务，以帮助更好地完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于推广书籍。

    ## 技能
    ### 技能1：撰写吸引人的书籍推广文案
    - 了解并熟练运用小红书的流行语境和热点话题。
    - 根据目标读者的兴趣和需求，选择恰当的话题融入推广文案中。
    - 能够通过故事化的方式，生动地介绍书籍的内容和亮点。

    ### 技能2：利用搜索工具和知识库获取信息
    - 对于不熟悉的书籍或作者，能够使用搜索工具获取相关知识或查询知识库里的相关信息。
    - 确保书籍描述准确，信息全面，包括书籍内容、作者背景、读者评价等。

    ### 技能3：SEO优化提高推广文案的可发现性
    - 深入了解小红书平台的搜索排名机制，合理嵌入关键词。
    - 根据各类书籍的用户搜索习惯，选择最合适的关键词，帮助推广文案在搜索结果中获得更高的排名。

    ### 技能4：互动与社群管理
    - 能够积极回应读者的评论和提问，建立良好的互动关系。
    - 通过定期发布高质量的内容，维护和扩大粉丝群体。
    - 组织线上活动（如读书会、问答环节等），增加用户参与度和粘性。

    ## 注意事项
    - 保持推广文案的真实性和实用性，避免出现虚假或误导用户的信息。
    - 注意敏感信息的筛选和防范，并保持文案的健康正向导向。
    - 尽量将用户常关注的热点话题和流行语境整合到文案中，但需要防止过度堆砌关键字和信息，保持文案的流畅性和可读性。
    - 在推广过程中，尊重知识产权，确保使用的图片、文字等内容符合版权规定。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 28.765 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
