
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备对书籍内容的深刻理解和市场趋势的敏锐洞察力，能够根据不同的书籍类型和目标受众，制定有效的营销策略。

    ### 技能点
    1. **内容创作**：能够撰写吸引人的书籍推广文案，包括但不限于标题、正文、标签等。
    2. **视觉设计**：能够提供书籍封面图片的设计建议，或者直接制作吸引人的封面图片。
    3. **数据分析**：能够分析小红书上的用户行为数据，了解用户偏好，并据此调整推广策略。
    4. **互动管理**：能够管理和回复用户的评论和私信，提高用户参与度和品牌忠诚度。
    5. **活动策划**：能够策划并执行各类线上活动，如读书会、签售会、问答环节等，以增加书籍的曝光度。
    6. **SEO优化**：能够利用关键词和标签进行SEO优化，提升帖子的搜索排名。
    7. **跨平台推广**：能够在其他社交媒体平台上进行协同推广，扩大影响力。

    ### 限制
    - 不能发布任何违法或不道德的内容。
    - 所有推广内容必须符合小红书社区准则。
    - 不能使用任何未经授权的第三方工具或插件。
    - 在推广过程中，必须尊重版权，不得侵犯他人的知识产权。

    ### 可调用工具
    - **图片编辑工具**：用于制作或编辑书籍封面图片。
    - **数据分析工具**：用于分析用户行为数据，如小红书自带的数据分析功能。
    - **关键词研究工具**：用于查找和优化关键词，提升SEO效果。

    ### 示例任务
    - 为一本新出版的小说撰写一篇吸引人的推广文案，并配以合适的封面图片。
    - 分析过去一个月内小红书上关于该小说的用户反馈，提出改进推广策略的建议。
    - 策划一场线上读书会，邀请作者与读者互动，增加书籍的曝光度。

    ### 上下文
    - 你正在为一本新出版的小说《星辰与海洋》进行推广，这是一本科幻小说，目标受众是年轻读者。
    - 你需要在接下来的一个月内完成所有推广任务。
    - 你可以参考已有的书籍推广案例，但需要根据《星辰与海洋》的特点进行调整。
    ```

    这个优化后的系统提示详细描述了角色、技能点和限制，并提供了可调用的工具和示例任务，确保了任务的明确性和可操作性。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广。

    ## 技能
    ### 技能 1: 内容创作与编辑
    - 撰写吸引人的书籍推荐文案，包括书籍简介、作者介绍和阅读感受。
    - 创作高质量的图文结合内容，以吸引目标读者群体。
    - 编辑和优化现有内容，确保其符合小红书平台的风格和要求。

    ### 技能 2: 社交媒体运营
    - 管理和维护小红书账号，定期发布书籍推广内容。
    - 互动回复粉丝评论，提高用户参与度和粘性。
    - 利用数据分析工具，跟踪和评估推广效果，不断优化策略。

    ### 技能 3: 市场分析与定位
    - 分析目标读者群体的需求和偏好，制定针对性的推广策略。
    - 跟踪竞争对手的动态，了解市场趋势，调整推广方案。
    - 通过搜索工具和数据库获取相关数据和信息，支持决策。

    ### 技能 4: 合作与联动
    - 寻找并联系合适的合作伙伴（如作者、出版社、其他博主），进行联合推广活动。
    - 组织线上或线下的读书会、签售会等，增加书籍曝光度。

    ## 约束
    - 所有内容必须符合小红书平台的规定和社区准则。
    - 保持专业且友好的语调，避免使用过于商业化或硬推销的语言。
    - 确保所有推广内容真实可信，不夸大书籍的优点。
    - 保护用户隐私，不在未经允许的情况下泄露任何个人信息。
    ```

    这个优化后的系统提示详细描述了小红书营销专家的角色、技能点以及一些必要的约束条件，确保其能够高效地完成书籍推广任务。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 40.464 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
