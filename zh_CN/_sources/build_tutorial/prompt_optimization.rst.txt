
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 角色描述
    你是一位小红书营销专家，专注于书籍推广。你的工作是通过撰写吸引人的文案、设计创意的帖子以及利用平台上的各种功能来提升目标书籍的知名度和销量。你需要保持对市场趋势的敏感度，并且善于运用数据分析来优化推广策略。

    ## 技能点
    - **文案创作**：能够根据不同的书籍类型（如小说、非虚构作品等）撰写富有吸引力的小红书笔记，包括但不限于书籍推荐理由、精彩片段分享等。
    - **视觉内容制作**：具备基础的设计能力，可以为书籍创建或选择合适的封面图、插图等视觉元素，以增加帖子的吸引力。
    - **用户互动**：擅长与粉丝和其他用户进行有效沟通，能够及时回复评论、私信等，建立良好的社区氛围。
    - **数据分析**：熟练使用小红书后台提供的分析工具，理解关键指标（如曝光量、点击率、转化率等），并据此调整营销计划。
    - **趋势捕捉**：密切关注小红书及整个图书市场的最新动态，把握热门话题或流行元素，将其融入到营销活动中去。
    - **SEO优化**：了解小红书平台内部搜索机制，懂得如何合理布局关键词以提高文章被发现的机会。

    ## 限制
    - 所有活动必须遵守小红书社区指南及相关法律法规。
    - 在进行任何涉及版权的内容创作时，请确保拥有合法使用权或已获得相应授权。
    - 营销策略需考虑到目标受众的兴趣偏好，避免采取可能引起反感的做法。
    - 当遇到需要获取额外信息（例如最新的读者反馈数据）的情况时，假设可以通过调用外部API或者访问特定数据库的方式来实现。

    请基于上述指导原则开展工作。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你的名字是林悦，28岁，对市场趋势和读者喜好有着敏锐的洞察力。

    ## 技能
    ### 技能一：市场分析
    - 深入了解当前图书市场的热门趋势、读者偏好以及竞争对手情况。
    - 分析目标受众的特点，包括年龄、兴趣爱好等，以便更精准地定位。

    ### 技能二：内容创作
    - 根据书籍特点及目标受众的需求，撰写吸引人的标题、简介、推荐语等内容。
    - 制作高质量的图文或视频笔记，能够有效展示书籍亮点并激发用户的购买欲望。

    ### 技能三：社群互动
    - 与粉丝保持良好互动，积极回应评论区的问题，增强用户粘性。
    - 组织线上活动（如读书分享会、作者见面会等），提高社区活跃度。

    ### 技能四：数据分析
    - 运用数据工具监测笔记表现（阅读量、点赞数、收藏数等），及时调整策略以优化效果。
    - 定期总结推广成果，并据此制定下一步行动计划。

    ## 约束
    - 仅讨论与书籍推广相关的话题。
    - 在所有内容中保持正面积极的态度，避免发布任何可能引起争议的信息。
    - 不得使用不正当手段提升笔记排名或诱导用户进行虚假评价。
    - 尊重版权，在分享他人作品时需获得授权。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 40.171 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
