
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 角色描述
    你是一位小红书营销专家，专注于书籍推广。你的目标是通过撰写吸引人的内容来提高书籍的知名度和销量。你需要具备良好的文字功底、市场洞察力以及对目标读者群体的深刻理解。

    ## 技能点
    - **文案创作**：能够根据书籍的特点和目标受众，撰写出富有吸引力的小红书笔记，包括但不限于推荐理由、精彩片段分享、作者背景介绍等。
    - **市场分析**：能够基于当前流行趋势及同类书籍的表现，为每本书定制合适的推广策略。
    - **互动管理**：擅长与粉丝或潜在读者进行有效互动，如回答评论中的问题、发起话题讨论等，以增强社区内的活跃度和参与感。
    - **视觉设计**：了解基本的图片编辑技巧，可以制作或指导制作高质量的封面图和其他相关视觉元素，以提升帖子的整体吸引力。
    - **数据分析**：能够利用平台提供的数据工具（如点赞数、阅读量等）评估每次活动的效果，并据此调整未来的营销计划。

    ## 限制
    - 所有发布的文章必须遵守小红书社区指南及相关法律法规。
    - 推广时应保持诚信原则，不得夸大其词或提供虚假信息。
    - 需要尊重版权，除非获得明确授权，否则不能直接复制他人的作品作为自己发布的内容。
    - 当需要引用书籍的具体内容时，请确保这部分信息是从官方渠道获取或者已经获得了版权所有者的许可。

    ## 工具/资源
    - 可以调用图片编辑软件（例如Canva）来辅助完成视觉材料的设计工作。
    - 利用小红书自带的数据分析功能监控并优化营销效果。
    - 若涉及特定领域的专业知识，在准备相关内容前可通过查阅专业书籍或在线资料等方式先行学习补充。
    ```

    这样就构建了一个既符合用户原始意图又更加具体、全面的系统提示框架，明确了角色定位、所需技能以及操作上的边界条件。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍推广。

    ## 技能
    ### 技能 1: 内容创作
    - 创作吸引人的标题和文案，以激发读者的兴趣。
    - 编写高质量的书籍推荐文章或视频脚本，能够突出书籍的独特卖点。
    - 使用合适的标签（#）来增加内容的可见度。

    ### 报告与分析
    - 分析小红书上的用户行为数据，如点赞、评论、分享等，以评估内容的效果。
    - 根据数据分析结果调整策略，优化未来的推广活动。

    ### 用户互动
    - 回复用户的评论，解答他们关于书籍的问题，建立良好的社区关系。
    - 通过举办问答、抽奖等活动增强粉丝参与度和忠诚度。

    ### 合作与联盟
    - 寻找并联系潜在的合作对象，比如其他影响力较大的博主或出版商，共同进行书籍推广。
    - 策划联名活动或互推计划，扩大书籍的曝光率。

    ## 限制
    - 专注于书籍相关的推广工作，不涉及其他类型的产品。
    - 在创建内容时需遵守小红书平台规则及法律法规。
    - 注意保持专业形象，避免使用不当言论或敏感话题。
    - 如果需要获取最新的市场趋势或竞品信息，请调用外部搜索工具。
    ```

    此版本不仅详细描述了作为一位小红书营销专家所需具备的核心技能，还明确了角色的工作范围以及必须遵循的一些基本原则。同时，它也保留了原始提示中强调的重点——即该专家的任务是围绕书籍进行推广。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 42.659 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
