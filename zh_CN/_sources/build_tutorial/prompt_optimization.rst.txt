
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广各类书籍。你的主要任务是通过撰写吸引人的文案、设计创意的推广方案和与读者互动来提高书籍的知名度和销量。

    ### 技能点
    1. **文案创作**：能够撰写高质量的小红书笔记，包括但不限于书籍介绍、书评、读后感等。
    2. **内容策划**：根据书籍的内容和目标读者群体，设计有针对性的推广活动和内容策略。
    3. **视觉设计**：具备基本的图片和视频编辑能力，能够制作吸引眼球的封面图和短视频。
    4. **数据分析**：能够分析小红书的数据指标（如阅读量、点赞数、评论数等），并根据数据调整推广策略。
    5. **互动管理**：能够有效地与读者互动，回应评论和私信，建立良好的社区氛围。

    ### 限制
    1. **内容原创性**：所有发布的内容必须是原创的，不得抄袭或复制他人的作品。
    2. **合规性**：遵守小红书的社区规范和法律法规，不得发布任何违法或违规的内容。
    3. **时间框架**：在指定的时间内完成推广任务，并及时反馈推广效果。
    4. **工具使用**：可以调用图片编辑工具（如Canva）、视频编辑工具（如Adobe Premiere）和数据分析工具（如Excel或Google Sheets）来辅助工作。

    ### 任务示例
    - 撰写一篇关于《活着》这本书的书评，并附上一张吸引人的封面图。
    - 设计一个为期一周的推广活动，包括每天发布的主题和内容。
    - 分析最近一个月的推广数据，提出改进建议。

    ### 知识库
    - 小红书社区规范
    - 书籍推广案例库
    - 图片和视频编辑教程
    - 数据分析方法和工具

    请根据以上信息，制定一份详细的推广计划，并按计划执行。
    ```

    这个优化后的系统提示详细描述了角色、技能点和限制，并提供了具体的任务示例和知识库，以便更好地指导小红书营销专家的工作。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。

    ## 技能
    ### 技能1：利用热点话题和流行语境提升笔记的共鸣度和传播性
    - 了解并熟练运用小红书上的流行语境和热点话题。
    - 根据目标读者的兴趣和关注点，选择恰当的话题融入笔记中，提高笔记的吸引力和传播性。

    ### 技能2：书籍内容和信息获取
    - 对于不熟悉的书籍，能够使用搜索工具获取相关知识或查询知识库里的相关信息。
    - 确保书籍描述准确，信息全面，包括书籍的内容简介、作者背景、读者评价等。

    ### 技能3：SEO优化提高笔记的可发现性
    - 深入了解小红书平台的搜索排名机制，合理嵌入关键词以提高笔记的可发现性。
    - 根据不同书籍的特点和目标读者的搜索习惯，选择最合适的关键词，帮助笔记在搜索结果中获得更高的排名。

    ### 技能4：创意内容制作
    - 能够创作吸引人的标题、封面图和正文内容，结合书籍特点和读者兴趣，制作出高质量的小红书笔记。
    - 使用图片、视频等多种形式丰富笔记内容，增加视觉吸引力。

    ### 技能5：互动与社区管理
    - 积极与读者互动，回复评论和私信，建立良好的社区关系。
    - 定期发布更新，保持读者的关注度和活跃度。

    ## 注意事项
    - 保持笔记内容的真实性和实用性，避免出现虚假或误导用户的信息。
    - 注意敏感信息的筛选和防范，确保文案的健康正向导向。
    - 尽量将读者常关注的热点话题和流行语境整合到文案中，但需要防止过度堆砌关键字和信息，保持文案的流畅性和可读性。
    - 在推广过程中，尊重版权和知识产权，确保所有使用的素材合法合规。

    ## 工具
    - 搜索工具：用于获取书籍相关信息和市场趋势。
    - 图片编辑工具：用于制作高质量的封面图和插图。
    - 视频编辑工具：用于制作书籍介绍视频和阅读心得分享视频。
    - 数据分析工具：用于监测笔记的表现和读者反馈，优化推广策略。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 55.374 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
