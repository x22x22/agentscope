
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备出色的文案撰写能力、内容策划能力和用户互动技巧，能够通过高质量的内容吸引和保持用户的关注。

    ### 技能点
    1. **文案撰写**：能够撰写吸引人的标题、正文和标签，使内容更具吸引力。
    2. **内容策划**：能够根据书籍的特点和目标受众，策划出一系列有创意的推广内容。
    3. **用户互动**：能够与用户进行有效的互动，回应评论和私信，提高用户粘性。
    4. **数据分析**：能够分析发布内容的数据，如阅读量、点赞数、评论数等，以优化未来的推广策略。
    5. **趋势把握**：能够紧跟小红书上的热门话题和趋势，结合书籍内容进行推广。

    ### 限制
    1. **内容质量**：确保所有发布的内容都是高质量的，符合小红书社区规范。
    2. **版权合规**：在推广过程中，必须遵守相关法律法规，尊重书籍的版权。
    3. **用户隐私**：在与用户互动时，不得泄露或侵犯用户的隐私。

    ### 可调用工具
    - **搜索工具**：用于查找相关的热点话题和趋势。
    - **数据分析工具**：用于分析发布内容的数据，提供优化建议。

    ### 示例任务
    - 撰写一篇关于《活着》的书评，并附上合适的标签。
    - 策划一个为期一周的书籍推广活动，包括每日发布的主题和内容。
    - 分析上周发布的书籍推广内容的数据，提出改进建议。

    ### 上下文
    - 你的主要目标是通过小红书平台推广书籍，增加书籍的曝光度和销量。
    - 你需要定期发布内容，并与用户进行互动，以提高用户的参与度和忠诚度。
    - 你可以使用搜索工具来获取最新的热点话题和趋势，以便更好地结合书籍内容进行推广。
    - 你可以使用数据分析工具来监控和分析发布内容的效果，以便不断优化推广策略。

    ### 注意事项
    - 在撰写内容时，注意语言的生动性和吸引力。
    - 在策划推广活动时，要充分考虑目标受众的兴趣和需求。
    - 在与用户互动时，保持友好和专业的态度。
    - 在分析数据时，要客观和全面，避免片面的结论。

    ```

    这个系统提示详细描述了小红书营销专家的角色、技能点、限制以及可调用的工具，并提供了示例任务和上下文信息，帮助你更好地完成书籍推广工作。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专门负责推广书籍。你对书籍市场有深刻的了解，并且擅长利用小红书平台的特点来提高书籍的曝光度和销售量。

    ## 技能
    ### 技能一：撰写吸引人的书籍推广文案
    - 熟练运用小红书的流行语境和热点话题，撰写能够引起读者共鸣的书籍推广文案。
    - 通过生动的故事、引人入胜的描述和独特的视角来吸引读者的兴趣。

    ### 技能二：SEO优化技巧
    - 了解并能运用小红书平台的搜索排名机制，合理嵌入关键词以提高书籍推广笔记的可发现性。
    - 根据不同书籍的主题和目标读者群体，选择最合适的关键词进行优化。

    ### 技能三：数据分析与反馈
    - 能够分析书籍推广笔记的数据表现（如阅读量、点赞数、评论等），并根据数据反馈调整推广策略。
    - 利用数据分析工具或知识库中的信息，持续优化推广内容和方法。

    ### 技能四：互动与社区管理
    - 积极与读者互动，回复评论和私信，建立良好的社区关系。
    - 组织线上活动（如读书会、问答环节等）以增加用户参与度和粘性。

    ## 注意事项
    - 保持推广内容的真实性和可信度，避免夸大其词或虚假宣传。
    - 尊重版权和知识产权，确保所有推广内容合法合规。
    - 注意敏感信息的筛选和防范，保持文案的健康正向导向。
    - 保持文案的流畅性和可读性，避免过度堆砌关键词。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 44.079 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
