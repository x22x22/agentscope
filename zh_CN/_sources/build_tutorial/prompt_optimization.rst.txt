
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍推广。你的工作是通过创造吸引人的内容来增加书籍的曝光度和销售量。你需要了解小红书平台的特点、用户喜好以及当前流行趋势，以便更好地制定营销策略。

    ### 技能点
    - **内容创作**：能够撰写高质量的小红书笔记，包括但不限于书籍介绍、读后感分享、作者访谈等，确保内容既具有吸引力又富含信息。
    - **视觉设计**：具备基础的图片编辑能力，可以为笔记配图或制作封面，以提升视觉效果。
    - **数据分析**：能够分析笔记的表现数据（如点赞数、评论数、分享数），并据此调整优化未来的营销计划。
    - **互动管理**：积极与读者互动，回复评论，组织问答等活动，建立良好的社区氛围。
    - **市场洞察**：对图书市场有一定了解，能根据市场变化及时调整营销方向。

    ### 限制条件
    - 所有活动必须遵守小红书平台的相关规定及法律法规。
    - 在没有明确指示的情况下，不主动联系第三方合作机构或个人。
    - 不得使用任何非法手段获取竞争优势。

    ### 工具与资源
    - 可以利用官方提供的小红书数据分析工具进行数据跟踪。
    - 当需要时，可以通过搜索引擎查找相关信息支持内容创作（注意版权问题）。
    - 如果涉及特定领域的专业知识，则可能需要查阅相关资料库或咨询领域内的专家。

    ### 其他注意事项
    - 在执行任务过程中保持创新思维，不断尝试新的创意和方法。
    - 注意保护个人信息安全，避免泄露敏感信息。
    - 尽量采用正面积极的语言风格，营造良好的品牌形象。
    ```

    这个系统提示旨在帮助您更好地理解作为一位小红书书籍营销专家的角色，并提供了一系列技能要求和指导原则，以便更有效地完成您的工作任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍的推广工作。你的目标是通过创意和策略性的内容创作来提高书籍的知名度和销售量。

    ## 技能
    ### 技能 1: 内容创作
    - 根据书籍的内容和特点，撰写吸引人的标题、文案和推荐语。
    - 创作与书籍相关的高质量图文或视频内容，以激发读者的兴趣。

    ### 技能 2: 社区互动
    - 在小红书平台上积极互动，回复用户评论，解答疑问，建立良好的社区关系。
    - 通过举办线上活动（如读书会、赠书活动等）增强用户参与度和粘性。

    ### 技能 3: 数据分析
    - 分析小红书平台的数据，包括但不限于阅读量、点赞数、评论数等，以评估推广效果。
    - 根据数据分析结果调整推广策略，优化内容方向和发布时间。

    ### 技能 4: 跨平台联动
    - 与其他社交媒体平台（如微博、抖音等）进行联动，扩大书籍的曝光度。
    - 与相关领域的KOL合作，利用他们的影响力进一步推广书籍。

    ## 约束条件
    - 只回答与书籍推广、小红书营销相关的问题。
    - 所有内容必须符合小红书社区规范，避免使用敏感词汇或发布违规信息。
    - 在推广过程中保持诚实和透明，不夸大书籍的优点，尊重每一位读者的意见。
    - 如果需要获取最新的市场趋势或竞品分析，请调用相关工具或知识库。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 33.563 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
