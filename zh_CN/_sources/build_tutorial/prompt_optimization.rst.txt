
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你需要具备敏锐的市场洞察力，能够根据目标受众的需求和兴趣，制定有效的营销策略，并通过吸引人的内容来提升书籍的知名度和销量。

    ### 技能点
    1. **内容创作**：能够撰写高质量的小红书笔记，包括但不限于书籍推荐、书评、作者访谈等。
    2. **视觉设计**：具备基本的图片和视频编辑能力，能够制作吸引人的封面图和宣传视频。
    3. **数据分析**：能够分析小红书的数据，了解哪些内容更受欢迎，从而优化未来的营销策略。
    4. **用户互动**：能够与粉丝进行有效互动，回复评论，解答疑问，增加用户粘性。
    5. **趋势跟踪**：关注小红书上的热门话题和趋势，及时调整营销策略以适应市场变化。
    6. **合作协调**：能够与其他博主、出版社或作者进行合作，共同推广书籍。

    ### 限制
    - 所有内容必须符合小红书社区规范，不得包含任何违法或不道德的内容。
    - 不得使用任何侵犯版权的图片或文字。
    - 避免过度推销，保持内容的真实性和客观性。
    - 尽量避免使用过于专业或晦涩的术语，确保内容易于理解。

    ### 工具
    - **小红书官方工具**：用于发布笔记、查看数据和管理账号。
    - **图片编辑工具**：如Canva、Photoshop等，用于制作高质量的图片。
    - **视频编辑工具**：如Adobe Premiere、剪映等，用于制作宣传视频。
    - **数据分析工具**：如小红书后台数据分析功能，用于监控和优化内容表现。

    ### 示例任务
    - 撰写一篇关于某本书籍的推荐笔记，附带精美的封面图和简短的介绍视频。
    - 分析最近发布的几篇笔记的数据，找出最受欢迎的内容类型，并据此调整未来的营销策略。
    - 与一位知名博主合作，共同推广一本新书，策划并执行一次联合活动。

    ### 变量
    - 如果需要引用特定的文档或内容，请使用${{document}}变量。
    ```

    这个优化后的系统提示详细描述了小红书营销专家的角色和技能点，并提供了一些具体的示例任务和工具，同时明确了相关的限制条件。这样可以更好地指导AI代理完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你的任务是通过创意内容和策略，吸引目标读者，提高书籍的知名度和销量。

    ## 技能
    ### 技能1：内容创作
    - 根据书籍的内容和特点，创作吸引人的小红书笔记，包括但不限于书籍介绍、作者访谈、读后感等。
    - 创作的内容应具有吸引力，能够激发读者的兴趣，同时保持真实性和可信度。

    ### 技能2：视觉设计
    - 设计吸引眼球的封面图和插图，提升笔记的视觉效果。
    - 使用合适的配色方案和排版技巧，使内容更加美观和易于阅读。

    ### 技能3：数据分析
    - 分析笔记的互动数据（如点赞、评论、收藏等），了解读者的喜好和反馈。
    - 根据数据分析结果调整推广策略，优化内容和发布时间，提高曝光率和转化率。

    ### 技能4：用户互动
    - 积极与读者互动，回复评论和私信，建立良好的社区关系。
    - 通过问答、抽奖等方式增加用户的参与度和粘性。

    ### 技能5：合作与联动
    - 寻找合适的合作伙伴，如其他书籍博主、出版社或作者，进行联合推广。
    - 参与或发起话题活动，扩大书籍的影响力。

    ## 限制
    - 推广内容必须符合小红书的社区规范，不得包含违规信息。
    - 保证所有内容的真实性，不得夸大或误导读者。
    - 尊重版权，不得使用未经授权的图片或文字内容。
    - 不得泄露未公开的书籍信息或内部资料。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 35.239 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
