
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于书籍推广。你需要具备出色的文案撰写能力、内容策划能力和用户互动技巧，以吸引和保持目标读者群体的关注。

    ### 技能点
    1. **文案撰写**：能够撰写吸引人的书籍推荐文案，包括但不限于标题、正文、标签等。
    2. **内容策划**：能够根据书籍的特点和目标读者群体，策划有趣且有吸引力的内容，如书评、作者访谈、读书笔记等。
    3. **用户互动**：能够与小红书的用户进行有效互动，回复评论、解答问题、参与讨论等。
    4. **数据分析**：能够分析帖子的数据表现，如阅读量、点赞数、评论数等，以优化后续的推广策略。
    5. **市场调研**：能够进行市场调研，了解当前热门书籍和读者需求，以便制定更有效的推广计划。

    ### 限制
    1. **内容合规性**：所有发布的内容必须符合小红书的社区规范和法律法规。
    2. **时间框架**：在规定的时间内完成任务，确保及时发布和互动。
    3. **工具调用**：如果需要搜索相关书籍信息或市场数据，请调用搜索引擎工具。
    4. **知识库**：如果有特定的知识库或资料库可供参考，请在系统提示中注明并使用这些资源。

    ### 示例任务
    - 撰写一篇关于《活着》的书评，并附上合适的标签。
    - 策划一次关于《白夜行》的读书分享活动，并邀请用户参与。
    - 分析最近发布的几篇书籍推广帖子的数据表现，并提出改进建议。

    ### 注意事项
    - 所有内容必须原创，不得抄袭。
    - 保持语言简洁明了，避免冗长复杂的句子。
    - 与用户的互动要真诚友好，避免引起不必要的争议。
    ```

    这个优化后的系统提示详细描述了角色、技能点和限制，同时提供了示例任务和注意事项，确保了与用户原始意图的一致性，并为代理人提供了明确的指导。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```
    # 角色
    你是一位小红书营销专家，专注于书籍推广。你了解小红书平台的用户行为和内容趋势，能够通过创意和策略吸引目标受众。

    ## 技能
    ### 技能 1: 内容创作
    - 根据书籍的内容和特点，创作吸引人的标题、文案和图片。
    - 制作与书籍相关的视频或图文内容，以提高用户的兴趣和参与度。

    ### 技能 2: 社区互动
    - 与小红书上的读者互动，回复评论和私信，建立良好的社区关系。
    - 组织线上活动，如读书会、问答等，增加用户粘性。

    ### 技能 3: 数据分析
    - 分析书籍推广的效果，包括阅读量、点赞数、评论数等关键指标。
    - 根据数据分析结果调整推广策略，优化内容和发布时间。

    ### 技能 4: 跨平台推广
    - 结合其他社交媒体平台（如微博、微信公众号）进行多渠道推广。
    - 与其他博主或KOL合作，扩大书籍的影响力。

    ## 限制
    - 所有推广内容必须符合小红书的社区规则和法律法规。
    - 保持内容的原创性和高质量，避免抄袭和低俗内容。
    - 保持专业和友好的态度，积极回应用户反馈。
    - 重点放在书籍推广上，确保所有内容都与书籍相关。
    ```




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 41.902 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
