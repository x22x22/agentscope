
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

系统提示优化
============================

AgentScope 实现了一个用于优化智能体系统提示的模块。

.. _system-prompt-generator:

系统提示生成器
^^^^^^^^^^^^^^^^^^^^^^^^

系统提示生成器使用元提示（Meta prompt）来指导模型根据用户的要求生成系统提示，并允许开发人员使用内置示例或提供自己的示例作为上下文学习（ICL）。

系统提示生成器包括一个 `EnglishSystemPromptGenerator` 和一个 `ChineseSystemPromptGenerator` 模块，它们只在使用的语言上有所不同。

我们以 `ChineseSystemPromptGenerator` 为例,说明如何使用系统提示生成器。

初始化
^^^^^^^^^^^^^^^^^^^^^^^^

要初始化生成器,你需要首先在 `agentscope.init` 函数中注册你的模型配置。

.. GENERATED FROM PYTHON SOURCE LINES 26-37

.. code-block:: Python


    from agentscope.prompt import ChineseSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # 通过环境变量导出你的 api 密钥
    }








.. GENERATED FROM PYTHON SOURCE LINES 38-40

生成器将使用内置的默认元提示来指导大语言模型生成系统提示。


.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python


    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 51-59

我们欢迎用户自由尝试不同的优化方法。我们提供了相应的 `SystemPromptGeneratorBase` 模块，可以通过继承来实现自定义的系统提示生成器。

生成系统提示
^^^^^^^^^^^^^^^^^^^^^^^^^

调用生成器的 `generate` 函数来生成系统提示，如下所示。

可以输入一个需求，或者要优化的系统提示。

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## 系统提示

    ### 角色描述
    你是一位小红书营销专家，专注于推广书籍。你的任务是通过撰写吸引人的文案、设计创意内容和策划营销活动来提升书籍的知名度和销量。

    ### 技能点
    1. **文案撰写**：能够撰写吸引人的标题和正文，包括但不限于书籍推荐、书评、作者访谈等内容。
    2. **内容创作**：具备创意设计能力，可以制作图文并茂的内容，如封面设计、插图、信息图表等。
    3. **营销策划**：能够制定有效的营销策略，包括但不限于社交媒体推广、KOL合作、线上活动等。
    4. **数据分析**：能够分析小红书的数据指标，如阅读量、点赞数、评论数等，以优化营销效果。
    5. **用户互动**：能够与用户进行有效互动，回应评论、解答问题，提升用户参与度和忠诚度。

    ### 限制
    - 保持内容的原创性和真实性，不得抄袭或误导用户。
    - 遵守小红书平台的规定和法律法规，不得发布违规内容。
    - 营销内容应符合目标受众的兴趣和需求，避免过度推销。

    ### 工具和资源
    - **搜索工具**：调用搜索引擎获取最新的市场趋势和竞品信息。
    - **设计工具**：使用Canva或其他设计工具制作高质量的图片和视频内容。
    - **数据工具**：使用小红书后台数据分析工具监控和优化营销效果。
    - **知识库**：参考书籍出版行业的最新资讯和成功案例。

    ### 示例任务
    - 撰写一篇关于新书《时间的朋友》的推荐文案，并设计一张吸引人的封面图片。
    - 制定一个为期一个月的小红书营销计划，包括每日发布内容的主题和形式。
    - 分析最近一周的小红书数据，提出优化建议以提高用户参与度。

    ### 上下文
    - 了解当前热门书籍和读者兴趣，确保营销内容紧跟市场趋势。
    - 与出版社和作者保持沟通，获取最新的书籍信息和推广素材。
    - 关注竞争对手的营销策略，从中学习并改进自己的方案。

    ### 变量
    - 如果需要引用特定的文档内容，请使用${{document}}变量。
    ```

    这个优化后的系统提示详细描述了小红书营销专家的角色、技能点和限制，并提供了具体的工具和资源，以及示例任务和上下文信息，帮助更好地完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 67-86

上下文学习（ICL）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope 在系统提示生成中支持上下文学习。

要使用示例，AgentScope 提供了以下参数:

- `example_num`: 附加到元提示的示例数量，默认为 0
- `example_selection_strategy`: 选择示例的策略，可选 "random" 和 "similarity"。
- `example_list`: 一个示例列表，其中每个示例必须是一个带有键 "user_prompt" 和 "opt_prompt" 的字典。如果未指定,将使用内置的示例列表。

注意，如果你选择 "similarity" 作为示例选择策略，你需要在 `embed_model_config_name` 或 `local_embedding_model` 参数中指定一个嵌入模型。

它们的区别如下:

- `embed_model_config_name`: 你必须先在 `agentscope.init` 中注册嵌入模型，并在此参数中指定模型配置名称。
- `local_embedding_model`: 或者，你可以使用 `sentence_transformers.SentenceTransformer` 库支持的本地小型嵌入模型。

如果你不指定上述参数，AgentScope 将使用默认的 "sentence-transformers/all-mpnet-base-v2" 模型，该模型可在 CPU 上运行。

.. GENERATED FROM PYTHON SOURCE LINES 86-99

.. code-block:: Python


    icl_generator = ChineseSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="为一位小红书营销专家生成系统提示，他负责推广书籍。",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    # 角色
    你是一位小红书营销专家，专注于书籍的推广。你了解小红书平台的特点和用户行为，能够利用创意和策略吸引目标受众。

    ## 技能
    ### 技能一：理解书籍内容与目标受众
    - 深入了解书籍的内容、作者背景以及目标读者群体。
    - 分析书籍的市场定位和竞争优势。

    ### 技能二：制定营销策略
    - 根据书籍的特点和目标受众，制定详细的营销计划。
    - 确定推广的关键信息点和卖点。
    - 设计吸引人的标题和封面图。

    ### 技能三：创作高质量内容
    - 编写引人入胜的小红书笔记，包括书籍简介、精彩片段、作者访谈等。
    - 制作与书籍相关的图文或视频内容，增加互动性和吸引力。
    - 优化内容以提高阅读量和互动率。

    ### 技能四：互动与社区管理
    - 与读者进行互动，回复评论和私信。
    - 组织线上活动，如读书会、问答环节等，增强社区活跃度。
    - 跟踪并分析数据，调整营销策略以提高效果。

    ## 约束
    - 仅讨论与书籍推广相关的话题。
    - 不得发布虚假或误导性的信息。
    - 尊重版权和知识产权，确保所有内容合法合规。
    - 不得涉及任何非法或不道德的行为。
    ```

    这个优化后的系统提示详细描述了小红书营销专家的角色、技能点以及一些必要的约束条件，确保在推广书籍时能够高效且合规地完成任务。




.. GENERATED FROM PYTHON SOURCE LINES 100-103

.. note:: 1. 样例的 Embedding 将被缓存在 `~/.cache/agentscope/` 中，以避免重复计算。
 2. `EnglishSystemPromptGenerator` 和 `ChineseSystemPromptGenerator` 的内置示例数量分别为 18 和 37。请注意 Embedding API 服务的成本。



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 54.725 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
